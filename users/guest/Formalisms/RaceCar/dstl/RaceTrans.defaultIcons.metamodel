{
	"types": {
		"StartEnginesIcon": [
			{
				"name": "typename",
				"type": "string",
				"default": "StartEnginesIcon"
			},
			{
				"name": "position",
				"type": "list<double>",
				"default": [
					121,
					165
				]
			},
			{
				"name": "orientation",
				"type": "double",
				"default": 0
			},
			{
				"name": "scale",
				"type": "list<double>",
				"default": [
					1,
					1
				]
			},
			{
				"name": "mapper",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "parser",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "$contents",
				"type": "map<string,*>",
				"default": {
					"nodes": {
						"16": {
							"src": {
								"type": "string",
								"value": "/Formalisms/RaceCar/dstl/icons/startEngines.png"
							},
							"width": {
								"type": "double",
								"value": 79
							},
							"height": {
								"type": "double",
								"value": 100
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#ffffff",
									"fill-opacity": 1,
									"font-size": "20px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
							"position": {
								"type": "list<double>",
								"value": [
									1,
									3
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						},
						"37": {
							"textContent": {
								"type": "string",
								"value": "Start\nEngines"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#000000",
									"fill-opacity": 1,
									"font-size": "15px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none",
									"text-anchor": "middle"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
							"position": {
								"type": "list<double>",
								"value": [
									39,
									101
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						}
					},
					"edges": []
				}
			},
			{
				"name": "$asuri",
				"type": "string",
				"default": "-1"
			}
		],
		"CarsGoToStartIcon": [
			{
				"name": "typename",
				"type": "string",
				"default": "CarsGoToStartIcon"
			},
			{
				"name": "position",
				"type": "list<double>",
				"default": [
					353,
					188
				]
			},
			{
				"name": "orientation",
				"type": "double",
				"default": 0
			},
			{
				"name": "scale",
				"type": "list<double>",
				"default": [
					1,
					1
				]
			},
			{
				"name": "mapper",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "parser",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "$contents",
				"type": "map<string,*>",
				"default": {
					"nodes": {
						"19": {
							"src": {
								"type": "string",
								"value": "/Formalisms/RaceCar/dstl/icons/goToStart.png"
							},
							"width": {
								"type": "double",
								"value": 133
							},
							"height": {
								"type": "double",
								"value": 100
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#ffffff",
									"fill-opacity": 1,
									"font-size": "20px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
							"position": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						},
						"39": {
							"textContent": {
								"type": "string",
								"value": "Go to Start\nPosition"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#000000",
									"fill-opacity": 1,
									"font-size": "15px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none",
									"text-anchor": "middle"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
							"position": {
								"type": "list<double>",
								"value": [
									74,
									102
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						}
					},
					"edges": []
				}
			},
			{
				"name": "$asuri",
				"type": "string",
				"default": "-1"
			}
		],
		"StepOnGasIcon": [
			{
				"name": "typename",
				"type": "string",
				"default": "StepOnGasIcon"
			},
			{
				"name": "position",
				"type": "list<double>",
				"default": [
					615,
					239
				]
			},
			{
				"name": "orientation",
				"type": "double",
				"default": 0
			},
			{
				"name": "scale",
				"type": "list<double>",
				"default": [
					1,
					1
				]
			},
			{
				"name": "mapper",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "parser",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "$contents",
				"type": "map<string,*>",
				"default": {
					"nodes": {
						"22": {
							"src": {
								"type": "string",
								"value": "/Formalisms/RaceCar/dstl/icons/stepOnGas.png"
							},
							"width": {
								"type": "double",
								"value": 114
							},
							"height": {
								"type": "double",
								"value": 100
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#ffffff",
									"fill-opacity": 1,
									"font-size": "20px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
							"position": {
								"type": "list<double>",
								"value": [
									3,
									4
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						},
						"41": {
							"textContent": {
								"type": "string",
								"value": "Step On Gas"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#000000",
									"fill-opacity": 1,
									"font-size": "15px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none",
									"text-anchor": "middle"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
							"position": {
								"type": "list<double>",
								"value": [
									63,
									108
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						}
					},
					"edges": []
				}
			},
			{
				"name": "$asuri",
				"type": "string",
				"default": "-1"
			}
		],
		"IsRaceFinishedIcon": [
			{
				"name": "typename",
				"type": "string",
				"default": "IsRaceFinishedIcon"
			},
			{
				"name": "position",
				"type": "list<double>",
				"default": [
					845,
					262
				]
			},
			{
				"name": "orientation",
				"type": "double",
				"default": 0
			},
			{
				"name": "scale",
				"type": "list<double>",
				"default": [
					1,
					1
				]
			},
			{
				"name": "mapper",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "parser",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "$contents",
				"type": "map<string,*>",
				"default": {
					"nodes": {
						"25": {
							"src": {
								"type": "string",
								"value": "/Formalisms/RaceCar/dstl/icons/isRaceFinished.png"
							},
							"width": {
								"type": "double",
								"value": 210
							},
							"height": {
								"type": "double",
								"value": 100
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#ffffff",
									"fill-opacity": 1,
									"font-size": "20px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
							"position": {
								"type": "list<double>",
								"value": [
									4,
									5
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						},
						"43": {
							"textContent": {
								"type": "string",
								"value": "Is Race Finished?"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#000000",
									"fill-opacity": 1,
									"font-size": "15px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none",
									"text-anchor": "middle"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
							"position": {
								"type": "list<double>",
								"value": [
									114,
									108
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						}
					},
					"edges": []
				}
			},
			{
				"name": "$asuri",
				"type": "string",
				"default": "-1"
			}
		],
		"AwardCeremonyIcon": [
			{
				"name": "typename",
				"type": "string",
				"default": "AwardCeremonyIcon"
			},
			{
				"name": "position",
				"type": "list<double>",
				"default": [
					1122,
					330
				]
			},
			{
				"name": "orientation",
				"type": "double",
				"default": 0
			},
			{
				"name": "scale",
				"type": "list<double>",
				"default": [
					1,
					1
				]
			},
			{
				"name": "mapper",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "parser",
				"type": "code",
				"default": "({position:getAttr(\"position\")})"
			},
			{
				"name": "$contents",
				"type": "map<string,*>",
				"default": {
					"nodes": {
						"28": {
							"src": {
								"type": "string",
								"value": "/Formalisms/RaceCar/dstl/icons/awardCeremony.png"
							},
							"width": {
								"type": "double",
								"value": 100
							},
							"height": {
								"type": "double",
								"value": 100
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#ffffff",
									"fill-opacity": 1,
									"font-size": "20px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
							"position": {
								"type": "list<double>",
								"value": [
									3,
									4
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						},
						"45": {
							"textContent": {
								"type": "string",
								"value": "Award\nCeremony"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"stroke-dasharray": "",
									"fill": "#000000",
									"fill-opacity": 1,
									"font-size": "15px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none",
									"text-anchor": "middle"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
							"position": {
								"type": "list<double>",
								"value": [
									38,
									102
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							}
						}
					},
					"edges": []
				}
			},
			{
				"name": "$asuri",
				"type": "string",
				"default": "-1"
			}
		],
		"nextLink": [
			{
				"name": "link-style",
				"type": "map<string,string>",
				"default": {
					"stroke": "#000000",
					"stroke-dasharray": "",
					"stroke-opacity": 0.5,
					"stroke-width": 1
				}
			},
			{
				"name": "arrowHead",
				"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
				"default": "custom"
			},
			{
				"name": "arrowTail",
				"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
				"default": "arrow-black"
			},
			{
				"name": "typename",
				"type": "string",
				"default": "nextLink"
			},
			{
				"name": "position",
				"type": "list<double>",
				"default": [
					360,
					524
				]
			},
			{
				"name": "orientation",
				"type": "double",
				"default": 0
			},
			{
				"name": "scale",
				"type": "list<double>",
				"default": [
					1,
					1
				]
			},
			{
				"name": "mapper",
				"type": "code",
				"default": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
			},
			{
				"name": "parser",
				"type": "code",
				"default": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
			},
			{
				"name": "$contents",
				"type": "map<string,*>",
				"default": {
					"nodes": {
						"32": {
							"textContent": {
								"type": "string",
								"value": ">"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "green",
									"stroke-dasharray": "",
									"fill": "green",
									"fill-opacity": 0.75,
									"font-size": "30px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 0.558282208588957,
									"yoffset": -17.5
								}
							}
						},
						"267": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,4 l-10,4 l3,-4 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "arrow-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -4
								}
							}
						},
						"268": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "diamond-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"269": {
							"r": {
								"type": "double",
								"value": 10
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "circle-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"270": {
							"r": {
								"type": "double",
								"value": 10
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "circle-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"271": {
							"r": {
								"type": "double",
								"value": 5
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "circle-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"272": {
							"segments": {
								"type": "string",
								"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "diamond-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"273": {
							"segments": {
								"type": "string",
								"value": "m0,0 l20,10 l-20,10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "triangle-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"274": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,4 l-10,4 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "triangle-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -4
								}
							}
						},
						"275": {
							"segments": {
								"type": "string",
								"value": "m0,0 l20,8 l-20,8 l6,-8 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "arrow-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -8
								}
							}
						},
						"276": {
							"segments": {
								"type": "string",
								"value": "m0,0 l20,10 l-20,10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "triangle-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"277": {
							"segments": {
								"type": "string",
								"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "diamond-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"278": {
							"segments": {
								"type": "string",
								"value": "m0,0 l20,8 l-20,8"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"fill-opacity": 0,
									"stroke-width": 1,
									"opacity": 0
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "arrow-empty-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -8
								}
							}
						},
						"279": {
							"r": {
								"type": "double",
								"value": 5
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "circle-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"280": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "diamond-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"281": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,4 l-10,4"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"fill-opacity": 0,
									"stroke-width": 1,
									"opacity": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "arrow-empty",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -4
								}
							}
						},
						"282": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,5 l-10,5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "triangle-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"283": {
							"segments": {
								"type": "string",
								"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "diamond-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"284": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-10,5 l10,5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "triangle-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"285": {
							"segments": {
								"type": "string",
								"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "diamond-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"286": {
							"r": {
								"type": "double",
								"value": 10
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "circle-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"287": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "arrow-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -8
								}
							}
						},
						"288": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "arrow-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -4
								}
							}
						},
						"289": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-20,10 l20,10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "triangle-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"290": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-20,10 l20,10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "triangle-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"291": {
							"r": {
								"type": "double",
								"value": 5
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "circle-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"292": {
							"r": {
								"type": "double",
								"value": 5
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "circle-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"293": {
							"r": {
								"type": "double",
								"value": 10
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "circle-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"294": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-20,8 l20,8"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"fill-opacity": 0,
									"stroke-width": 1,
									"opacity": 0
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "arrow-empty-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -8
								}
							}
						},
						"295": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-10,4 l10,4"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"fill-opacity": 0,
									"stroke-width": 1,
									"opacity": 0
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "arrow-empty",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -4
								}
							}
						},
						"296": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "diamond-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"297": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-10,4 l10,4 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "triangle-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -4
								}
							}
						},
						"298": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "diamond-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						}
					},
					"edges": []
				}
			},
			{
				"name": "$asuri",
				"type": "string",
				"default": "-1"
			},
			{
				"name": "$segments",
				"type": "map<string,list<string>>",
				"default": {}
			}
		],
		"notFinishedLink": [
			{
				"name": "link-style",
				"type": "map<string,string>",
				"default": {
					"stroke": "#000000",
					"stroke-dasharray": "",
					"stroke-opacity": 0.5,
					"stroke-width": 1
				}
			},
			{
				"name": "arrowHead",
				"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
				"default": "custom"
			},
			{
				"name": "arrowTail",
				"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
				"default": "arrow-black"
			},
			{
				"name": "typename",
				"type": "string",
				"default": "notFinishedLink"
			},
			{
				"name": "position",
				"type": "list<double>",
				"default": [
					714,
					531
				]
			},
			{
				"name": "orientation",
				"type": "double",
				"default": 0
			},
			{
				"name": "scale",
				"type": "list<double>",
				"default": [
					1,
					1
				]
			},
			{
				"name": "mapper",
				"type": "code",
				"default": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
			},
			{
				"name": "parser",
				"type": "code",
				"default": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
			},
			{
				"name": "$contents",
				"type": "map<string,*>",
				"default": {
					"nodes": {
						"34": {
							"textContent": {
								"type": "string",
								"value": "x"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "red",
									"stroke-dasharray": "",
									"fill": "red",
									"fill-opacity": 0.75,
									"font-size": "30px",
									"stroke-width": 1,
									"arrow-start": "none",
									"arrow-end": "none"
								}
							},
							"mapper": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 0.5705521472392638,
									"yoffset": -19.5
								}
							}
						},
						"267": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,4 l-10,4 l3,-4 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "arrow-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -4
								}
							}
						},
						"268": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "diamond-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"269": {
							"r": {
								"type": "double",
								"value": 10
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "circle-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"270": {
							"r": {
								"type": "double",
								"value": 10
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "circle-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"271": {
							"r": {
								"type": "double",
								"value": 5
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "circle-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"272": {
							"segments": {
								"type": "string",
								"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "diamond-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"273": {
							"segments": {
								"type": "string",
								"value": "m0,0 l20,10 l-20,10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "triangle-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"274": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,4 l-10,4 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "triangle-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -4
								}
							}
						},
						"275": {
							"segments": {
								"type": "string",
								"value": "m0,0 l20,8 l-20,8 l6,-8 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "arrow-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -8
								}
							}
						},
						"276": {
							"segments": {
								"type": "string",
								"value": "m0,0 l20,10 l-20,10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "triangle-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"277": {
							"segments": {
								"type": "string",
								"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "diamond-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"278": {
							"segments": {
								"type": "string",
								"value": "m0,0 l20,8 l-20,8"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"fill-opacity": 0,
									"stroke-width": 1,
									"opacity": 0
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "arrow-empty-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -8
								}
							}
						},
						"279": {
							"r": {
								"type": "double",
								"value": 5
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "circle-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"280": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "diamond-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -10
								}
							}
						},
						"281": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,4 l-10,4"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"fill-opacity": 0,
									"stroke-width": 1,
									"opacity": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "arrow-empty",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -4
								}
							}
						},
						"282": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,5 l-10,5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowTail",
							"arrowType": "triangle-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": 1,
									"yoffset": -5
								}
							}
						},
						"283": {
							"segments": {
								"type": "string",
								"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "diamond-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"284": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-10,5 l10,5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "triangle-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"285": {
							"segments": {
								"type": "string",
								"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "diamond-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"286": {
							"r": {
								"type": "double",
								"value": 10
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "circle-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"287": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "arrow-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -8
								}
							}
						},
						"288": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "arrow-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -4
								}
							}
						},
						"289": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-20,10 l20,10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "triangle-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"290": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-20,10 l20,10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "triangle-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"291": {
							"r": {
								"type": "double",
								"value": 5
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "circle-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"292": {
							"r": {
								"type": "double",
								"value": 5
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "circle-white",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -5
								}
							}
						},
						"293": {
							"r": {
								"type": "double",
								"value": 10
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "circle-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"294": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-20,8 l20,8"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"fill-opacity": 0,
									"stroke-width": 1,
									"opacity": 0
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "arrow-empty-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -8
								}
							}
						},
						"295": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-10,4 l10,4"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"fill-opacity": 0,
									"stroke-width": 1,
									"opacity": 0
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "arrow-empty",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -4
								}
							}
						},
						"296": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "diamond-black-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						},
						"297": {
							"segments": {
								"type": "string",
								"value": "m0,0 l-10,4 l10,4 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#000000",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "triangle-black",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -4
								}
							}
						},
						"298": {
							"segments": {
								"type": "string",
								"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
							},
							"style": {
								"type": "map<string,string>",
								"value": {
									"stroke": "#000000",
									"fill": "#ffffff",
									"opacity": 0,
									"stroke-width": 1
								}
							},
							"mapper": {
								"type": "code",
								"value": ""
							},
							"parser": {
								"type": "code",
								"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
							},
							"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
							"position": {
								"type": "list<double>",
								"value": [
									0,
									0
								]
							},
							"orientation": {
								"type": "double",
								"value": 0
							},
							"scale": {
								"type": "list<double>",
								"value": [
									1,
									1
								]
							},
							"arrow": "arrowHead",
							"arrowType": "diamond-white-large",
							"$linkDecoratorInfo": {
								"type": "map<string,double>",
								"value": {
									"xratio": -1,
									"yoffset": -10
								}
							}
						}
					},
					"edges": []
				}
			},
			{
				"name": "$asuri",
				"type": "string",
				"default": "-1"
			},
			{
				"name": "$segments",
				"type": "map<string,list<string>>",
				"default": {}
			}
		]
	},
	"constraints": [],
	"actions": [],
	"cardinalities": {
		"StartEnginesIcon": [],
		"CarsGoToStartIcon": [],
		"StepOnGasIcon": [],
		"IsRaceFinishedIcon": [],
		"AwardCeremonyIcon": [],
		"nextLink": [],
		"notFinishedLink": []
	},
	"legalConnections": {},
	"connectorTypes": {},
	"types2parentTypes": {
		"StartEnginesIcon": [],
		"CarsGoToStartIcon": [],
		"StepOnGasIcon": [],
		"IsRaceFinishedIcon": [],
		"AwardCeremonyIcon": [],
		"nextLink": [],
		"notFinishedLink": []
	}
}