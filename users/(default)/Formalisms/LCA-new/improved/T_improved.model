{
	"csm": {
		"nodes": {
			"0": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						661,
						200
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"21": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/Start/0.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon"
			},
			"1": {
				"typename": {
					"type": "string",
					"value": "FRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						575,
						250
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"366": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										26
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"367": {
								"textContent": {
									"type": "string",
									"value": "linkToSelf"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"368": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"369": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"370": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"371": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"372": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"373": {
								"textContent": {
									"type": "string",
									"value": "F"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "100%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										205,
										22
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"374": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										95,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"375": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										37.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"376": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										15.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"377": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										23,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "366",
								"dest": "375"
							},
							{
								"src": "375",
								"dest": "367"
							},
							{
								"src": "366",
								"dest": "376"
							},
							{
								"src": "376",
								"dest": "371"
							},
							{
								"src": "366",
								"dest": "377"
							},
							{
								"src": "377",
								"dest": "369"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/FRule/1.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon"
			},
			"2": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "initialLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						674.5,
						240.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.4902802765346905,6.959982753097395%",
										"0;21.220832774031322,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.475730226561382,6.959982753097395%",
										"0;20.803233808845476,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.475730226561382,6.959982753097395%",
										"0;20.803233808845476,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.475730226561382,6.959982753097395%",
										"0;20.803233808845476,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.487855268205749,6.959982753097395%",
										"0;21.15123294650033,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.487855268205749,6.959982753097395%",
										"0;21.15123294650033,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.475730226561382,6.959982753097395%",
										"0;20.803233808845476,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.4902802765346905,6.959982753097395%",
										"0;21.220832774031322,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.480580243219151,6.959982753097395%",
										"0;20.942433463907406,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.475730226561382,6.959982753097395%",
										"0;20.803233808845476,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.487855268205749,6.959982753097395%",
										"0;21.15123294650033,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.480580243219151,6.959982753097395%",
										"0;20.942433463907406,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.487855268205749,6.959982753097395%",
										"0;21.15123294650033,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.475730226561382,6.959982753097395%",
										"0;20.803233808845476,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.4902802765346905,6.959982753097395%",
										"0;21.220832774031322,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.487855268205749,6.959982753097395%",
										"0;21.15123294650033,99.75749916711318%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;86.00899703397428"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498357154547421,0%",
										"0;-19.628163003962754,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498357154547421,0%",
										"0;-19.628163003962754,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498357154547421,0%",
										"0;-19.628163003962754,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496714309094841,0%",
										"0;-19.75632600792551,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.497371447275896,0%",
										"0;-19.705060806340413,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.498685723637891,0%",
										"0;-19.602530403170192,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496714309094841,0%",
										"0;-19.75632600792551,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496714309094841,0%",
										"0;-19.75632600792551,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498357154547421,0%",
										"0;-19.628163003962754,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498357154547421,0%",
										"0;-19.628163003962754,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496714309094841,0%",
										"0;-19.75632600792551,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.497371447275896,0%",
										"0;-19.705060806340413,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.498685723637891,0%",
										"0;-19.602530403170192,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496714309094841,0%",
										"0;-19.75632600792551,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.498685723637891,0%",
										"0;-19.602530403170192,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496714309094841,0%",
										"0;-19.75632600792551,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.53119928561418"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/initial/2.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon/0.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/2.instance": "M674,221L674.5,240.5",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/2.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/1.instance": "M674.5019132108401,240.5746152227656L675.9999803098501,261.9992320841552"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink"
			},
			"3": {
				"typename": {
					"type": "string",
					"value": "FRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						575,
						365
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"366": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										26
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"367": {
								"textContent": {
									"type": "string",
									"value": "linkToParent"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"368": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"369": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"370": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"371": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"372": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"373": {
								"textContent": {
									"type": "string",
									"value": "F"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "100%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										205,
										22
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"374": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										95,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"375": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										37.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"376": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										15.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"377": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										23,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "366",
								"dest": "375"
							},
							{
								"src": "375",
								"dest": "367"
							},
							{
								"src": "366",
								"dest": "376"
							},
							{
								"src": "376",
								"dest": "371"
							},
							{
								"src": "366",
								"dest": "377"
							},
							{
								"src": "377",
								"dest": "369"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/FRule/3.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon"
			},
			"4": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						648,
						356.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.535931997516514,77.32677465260906%",
										"0;17.406614925932388,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.340409848492754,77.32677465260906%",
										"0;12.767008446775833,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.340409848492754,77.32677465260906%",
										"0;12.767008446775833,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.340409848492754,77.32677465260906%",
										"0;12.767008446775833,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.17001163934583,77.32677465260906%",
										"0;16.633347179406314,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.17001163934583,77.32677465260906%",
										"0;16.633347179406314,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.340409848492754,77.32677465260906%",
										"0;12.767008446775833,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.535931997516514,77.32677465260906%",
										"0;17.406614925932388,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;30.072250564834007,77.32677465260906%",
										"0;14.313543939828037,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.340409848492754,77.32677465260906%",
										"0;12.767008446775833,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.17001163934583,77.32677465260906%",
										"0;16.633347179406314,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;30.072250564834007,77.32677465260906%",
										"0;14.313543939828037,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.17001163934583,77.32677465260906%",
										"0;16.633347179406314,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.340409848492754,77.32677465260906%",
										"0;12.767008446775833,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.535931997516514,77.32677465260906%",
										"0;17.406614925932388,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.17001163934583,77.32677465260906%",
										"0;16.633347179406314,63.40796418293697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;39.35175659944572"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.972390837583703,0%",
										"0;-21.4791434706043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.972390837583703,0%",
										"0;-21.4791434706043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.972390837583703,0%",
										"0;-21.4791434706043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.944781675167405,0%",
										"0;-25.4582869412086,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.1558253401339,0%",
										"0;-23.866629552966856,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.577912670066894,0%",
										"0;-20.683314776483428,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.944781675167405,0%",
										"0;-25.4582869412086,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.944781675167405,0%",
										"0;-25.4582869412086,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.972390837583703,0%",
										"0;-21.4791434706043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.972390837583703,0%",
										"0;-21.4791434706043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.944781675167405,0%",
										"0;-25.4582869412086,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.1558253401339,0%",
										"0;-23.866629552966856,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.577912670066894,0%",
										"0;-20.683314776483428,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.944781675167405,0%",
										"0;-25.4582869412086,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.577912670066894,0%",
										"0;-20.683314776483428,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.944781675167405,0%",
										"0;-25.4582869412086,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;37.26640190097714"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/4.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/1.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/4.instance": "M625,339L648,356.5",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/4.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/3.instance": "M648.0588228447211,356.54779356133594L672.999613430199,376.99968591203674"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"5": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						699.8924533406772,
						357.60471648407747
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.952008865201833,-67.80564970309979%",
										"0;22.10711484268171,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.541950143821055,-67.80564970309979%",
										"0;26.175453824867702,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.541950143821055,-67.80564970309979%",
										"0;26.175453824867702,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.541950143821055,-67.80564970309979%",
										"0;26.175453824867702,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.21699907830498,-67.80564970309979%",
										"0;22.785171339712747,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.21699907830498,-67.80564970309979%",
										"0;22.785171339712747,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.541950143821055,-67.80564970309979%",
										"0;26.175453824867702,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.952008865201833,-67.80564970309979%",
										"0;22.10711484268171,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-12.011969717614647,-67.80564970309979%",
										"0;24.819340830805743,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.541950143821055,-67.80564970309979%",
										"0;26.175453824867702,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.21699907830498,-67.80564970309979%",
										"0;22.785171339712747,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-12.011969717614647,-67.80564970309979%",
										"0;24.819340830805743,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.21699907830498,-67.80564970309979%",
										"0;22.785171339712747,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.541950143821055,-67.80564970309979%",
										"0;26.175453824867702,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.952008865201833,-67.80564970309979%",
										"0;22.10711484268171,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.21699907830498,-67.80564970309979%",
										"0;22.785171339712747,73.50097868967816%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;132.69195690854966"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.291285380097634,0%",
										"0;-12.749355572588229,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.291285380097634,0%",
										"0;-12.749355572588229,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.291285380097634,0%",
										"0;-12.749355572588229,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.475024100872474,0%",
										"0;-8.893994661099043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;25.201528612562583,0%",
										"0;-10.436139025694729,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;22.654537635942688,0%",
										"0;-13.5204277548861,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.475024100872474,0%",
										"0;-8.893994661099043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.475024100872474,0%",
										"0;-8.893994661099043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.291285380097634,0%",
										"0;-12.749355572588229,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.291285380097634,0%",
										"0;-12.749355572588229,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.475024100872474,0%",
										"0;-8.893994661099043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;25.201528612562583,0%",
										"0;-10.436139025694729,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;22.654537635942688,0%",
										"0;-13.5204277548861,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.475024100872474,0%",
										"0;-8.893994661099043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;22.654537635942688,0%",
										"0;-13.5204277548861,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.475024100872474,0%",
										"0;-8.893994661099043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;140.45026775074413"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/5.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/1.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/5.instance": "M720,341L699.8924533406772,357.60471648407747",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/5.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/3.instance": "M699.946429397374,357.55216084992526L682.0004053278883,376.9996053386352"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"6": {
				"typename": {
					"type": "string",
					"value": "EndSuccessIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						472,
						751
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"23": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#008000",
										"stroke-dasharray": "",
										"fill": "none",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none",
										"": ""
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"26": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#008000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none",
										"": ""
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"27": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.492540538484263,
										6.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "23",
								"dest": "27"
							},
							{
								"src": "27",
								"dest": "26"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess/6.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon"
			},
			"7": {
				"typename": {
					"type": "string",
					"value": "EndFailIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						830,
						739
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"451": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#800000",
										"stroke-dasharray": "",
										"fill": "none",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none",
										"": ""
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"455": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"456": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"457": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.363811097006419,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"458": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.3638135362075445,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "451",
								"dest": "457"
							},
							{
								"src": "457",
								"dest": "455"
							},
							{
								"src": "451",
								"dest": "458"
							},
							{
								"src": "458",
								"dest": "456"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail/7.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon"
			},
			"16": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						576,
						474
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "getLCA"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/16.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"25": {
				"typename": {
					"type": "string",
					"value": "CRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						431,
						626
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"596": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										86
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"597": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										95,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"598": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										86
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"600": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										86
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"601": {
								"width": {
									"type": "double",
									"value": 210
								},
								"height": {
									"type": "double",
									"value": 60
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										24
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"602": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										12,
										43
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"603": {
								"textContent": {
									"type": "string",
									"value": "deleteTemp"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										52,
										43
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"604": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"605": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										45,
										43
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"606": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										27.380101318328116,
										42.57653018725193
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"607": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										19.861485400667107,
										42.60135036424299
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"608": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										41.75,
										42.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "604",
								"dest": "606"
							},
							{
								"src": "606",
								"dest": "605"
							},
							{
								"src": "604",
								"dest": "607"
							},
							{
								"src": "607",
								"dest": "602"
							},
							{
								"src": "604",
								"dest": "608"
							},
							{
								"src": "608",
								"dest": "603"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/CRule/25.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon"
			},
			"28": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						480.5,
						736.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.483490348201599,9.05357460425226%",
										"0;16.13694976146803,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.458849587007819,9.05357460425226%",
										"0;15.593735285212915,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.458849587007819,9.05357460425226%",
										"0;15.593735285212915,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.458849587007819,9.05357460425226%",
										"0;15.593735285212915,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.479383554669312,9.05357460425226%",
										"0;16.046414015425512,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.479383554669312,9.05357460425226%",
										"0;16.046414015425512,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.458849587007819,9.05357460425226%",
										"0;15.593735285212915,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.483490348201599,9.05357460425226%",
										"0;16.13694976146803,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.46706317407245,9.05357460425226%",
										"0;15.774806777297954,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.458849587007819,9.05357460425226%",
										"0;15.593735285212915,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.479383554669312,9.05357460425226%",
										"0;16.046414015425512,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.46706317407245,9.05357460425226%",
										"0;15.774806777297954,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.479383554669312,9.05357460425226%",
										"0;16.046414015425512,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.458849587007819,9.05357460425226%",
										"0;15.593735285212915,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.483490348201599,9.05357460425226%",
										"0;16.13694976146803,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.479383554669312,9.05357460425226%",
										"0;16.046414015425512,99.58932064677035%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.80557109226496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4794660323385074,0%",
										"0;-16.952678730212597,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4794660323385074,0%",
										"0;-16.952678730212597,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4794660323385074,0%",
										"0;-16.952678730212597,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.458932064677015,0%",
										"0;-17.405357460425193,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.467145651741646,0%",
										"0;-17.224285968340155,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.4835728258707945,0%",
										"0;-16.862142984170077,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.458932064677015,0%",
										"0;-17.405357460425193,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.458932064677015,0%",
										"0;-17.405357460425193,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4794660323385074,0%",
										"0;-16.952678730212597,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4794660323385074,0%",
										"0;-16.952678730212597,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.458932064677015,0%",
										"0;-17.405357460425193,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.467145651741646,0%",
										"0;-17.224285968340155,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.4835728258707945,0%",
										"0;-16.862142984170077,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.458932064677015,0%",
										"0;-17.405357460425193,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.4835728258707945,0%",
										"0;-16.862142984170077,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.458932064677015,0%",
										"0;-17.405357460425193,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;84.8055710922652"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/28.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon/25.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/28.instance": "M479,720L480.5,736.5",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/28.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon/6.instance": "M480.50677683901137,736.5745452291258L481.9999175223308,752.9990927456381"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"29": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						535,
						741.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-40.31525725836002,-90.70089677484327%",
										"0;23.127897738647903,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-37.78858941963233,-90.70089677484327%",
										"0;28.569951545138565,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-37.78858941963233,-90.70089677484327%",
										"0;28.569951545138565,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-37.78858941963233,-90.70089677484327%",
										"0;28.569951545138565,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.89414595190544,-90.70089677484327%",
										"0;24.034906706396328,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.89414595190544,-90.70089677484327%",
										"0;24.034906706396328,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-37.78858941963233,-90.70089677484327%",
										"0;28.569951545138565,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-40.31525725836002,-90.70089677484327%",
										"0;23.127897738647903,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-38.6308120325416,-90.70089677484327%",
										"0;26.755933609641716,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-37.78858941963233,-90.70089677484327%",
										"0;28.569951545138565,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.89414595190544,-90.70089677484327%",
										"0;24.034906706396328,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-38.6308120325416,-90.70089677484327%",
										"0;26.755933609641716,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.89414595190544,-90.70089677484327%",
										"0;24.034906706396328,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-37.78858941963233,-90.70089677484327%",
										"0;28.569951545138565,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-40.31525725836002,-90.70089677484327%",
										"0;23.127897738647903,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.89414595190544,-90.70089677484327%",
										"0;24.034906706396328,42.111130645462666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190496"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;44.10555653227311,0%",
										"0;-14.964955161257876,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;44.10555653227311,0%",
										"0;-14.964955161257876,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;44.10555653227311,0%",
										"0;-14.964955161257876,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;46.21111306454634,0%",
										"0;-10.429910322515639,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;45.36889045163707,0%",
										"0;-12.243928258012602,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;43.684445225818536,0%",
										"0;-15.871964129006301,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;46.21111306454634,0%",
										"0;-10.429910322515639,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;46.21111306454634,0%",
										"0;-10.429910322515639,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;44.10555653227311,0%",
										"0;-14.964955161257876,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;44.10555653227311,0%",
										"0;-14.964955161257876,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;46.21111306454634,0%",
										"0;-10.429910322515639,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;45.36889045163707,0%",
										"0;-12.243928258012602,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;43.684445225818536,0%",
										"0;-15.871964129006301,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;46.21111306454634,0%",
										"0;-10.429910322515639,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;43.684445225818536,0%",
										"0;-15.871964129006301,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;46.21111306454634,0%",
										"0;-10.429910322515639,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.09523119190482"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/29.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon/25.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/29.instance": "M577,722L535,741.5",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/29.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon/6.instance": "M534.9316706317079,741.5317243495641L493.00029751582144,760.9998618676542"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"76": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						651.6254093866887,
						469.0836062577925
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.592980667798656,83.20502943378445%",
										"0;13.58791874458035,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;30.92118184514993,83.20502943378445%",
										"0;8.595616978553267,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;30.92118184514993,83.20502943378445%",
										"0;8.595616978553267,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;30.92118184514993,83.20502943378445%",
										"0;8.595616978553267,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.14768086402387,83.20502943378445%",
										"0;12.75586845024253,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.14768086402387,83.20502943378445%",
										"0;12.75586845024253,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;30.92118184514993,83.20502943378445%",
										"0;8.595616978553267,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.592980667798656,83.20502943378445%",
										"0;13.58791874458035,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;29.811781452699506,83.20502943378445%",
										"0;10.259717567228961,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;30.92118184514993,83.20502943378445%",
										"0;8.595616978553267,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.14768086402387,83.20502943378445%",
										"0;12.75586845024253,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;29.811781452699506,83.20502943378445%",
										"0;10.259717567228961,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.14768086402387,83.20502943378445%",
										"0;12.75586845024253,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;30.92118184514993,83.20502943378445%",
										"0;8.595616978553267,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.592980667798656,83.20502943378445%",
										"0;13.58791874458035,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.14768086402387,83.20502943378445%",
										"0;12.75586845024253,55.47001962252279%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.6900675259797"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-22.85190840556254,0%",
										"0;-21.243857729481704,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-22.85190840556254,0%",
										"0;-21.243857729481704,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-22.85190840556254,0%",
										"0;-21.243857729481704,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.078407424436364,0%",
										"0;-25.40410920117091,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-21.187807816886902,0%",
										"0;-23.740008612495217,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.406608601787752,0%",
										"0;-20.411807435143885,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.078407424436364,0%",
										"0;-25.40410920117091,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.078407424436364,0%",
										"0;-25.40410920117091,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-22.85190840556254,0%",
										"0;-21.243857729481704,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-22.85190840556254,0%",
										"0;-21.243857729481704,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.078407424436364,0%",
										"0;-25.40410920117091,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-21.187807816886902,0%",
										"0;-23.740008612495217,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.406608601787752,0%",
										"0;-20.411807435143885,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.078407424436364,0%",
										"0;-25.40410920117091,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.406608601787752,0%",
										"0;-20.411807435143885,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-20.078407424436364,0%",
										"0;-25.40410920117091,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;33.69006752597982"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/76.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/3.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/76.instance": "M626,452L651.6254093866887,469.0836062577925",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/76.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/16.instance": "M651.5624992725162,469.04166618167744L676.9995892695864,485.99972617972423"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"78": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						580.8830509594457,
						599.0940677065329
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-43.375818273265054,-77.92134503124142%",
										"0;40.02262674785072,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.615266404366025,-77.92134503124142%",
										"0;44.69790744972511,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.615266404366025,-77.92134503124142%",
										"0;44.69790744972511,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.615266404366025,-77.92134503124142%",
										"0;44.69790744972511,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.74905962844855,-77.92134503124142%",
										"0;40.80184019816306,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.74905962844855,-77.92134503124142%",
										"0;40.80184019816306,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.615266404366025,-77.92134503124142%",
										"0;44.69790744972511,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-43.375818273265054,-77.92134503124142%",
										"0;40.02262674785072,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-40.868783693999035,-77.92134503124142%",
										"0;43.13948054910031,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.615266404366025,-77.92134503124142%",
										"0;44.69790744972511,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.74905962844855,-77.92134503124142%",
										"0;40.80184019816306,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-40.868783693999035,-77.92134503124142%",
										"0;43.13948054910031,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.74905962844855,-77.92134503124142%",
										"0;40.80184019816306,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-39.615266404366025,-77.92134503124142%",
										"0;44.69790744972511,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-43.375818273265054,-77.92134503124142%",
										"0;40.02262674785072,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.74905962844855,-77.92134503124142%",
										"0;40.80184019816306,62.67586448165058%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.18861596324166"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.25074226463687,0%",
										"0;-33.19800045497084,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.25074226463687,0%",
										"0;-33.19800045497084,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.25074226463687,0%",
										"0;-33.19800045497084,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38453548871939,0%",
										"0;-29.301933203408794,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;51.131018199086384,0%",
										"0;-30.86036010403359,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;48.623983619820365,0%",
										"0;-33.97721390528318,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38453548871939,0%",
										"0;-29.301933203408794,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38453548871939,0%",
										"0;-29.301933203408794,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.25074226463687,0%",
										"0;-33.19800045497084,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.25074226463687,0%",
										"0;-33.19800045497084,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38453548871939,0%",
										"0;-29.301933203408794,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;51.131018199086384,0%",
										"0;-30.86036010403359,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;48.623983619820365,0%",
										"0;-33.97721390528318,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38453548871939,0%",
										"0;-29.301933203408794,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;48.623983619820365,0%",
										"0;-33.97721390528318,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38453548871939,0%",
										"0;-29.301933203408794,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;141.1886159632416"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/78.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/16.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/78.instance": "M627,562L580.8830509594457,599.0940677065329",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/78.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon/25.instance": "M580.9416245471076,599.0469541686309L535.0001981069146,635.9998406531339"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"79": {
				"typename": {
					"type": "string",
					"value": "FRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						690,
						626
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"366": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										26
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"367": {
								"textContent": {
									"type": "string",
									"value": "linkToAncestors"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"368": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"369": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"370": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"371": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"372": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"373": {
								"textContent": {
									"type": "string",
									"value": "F"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "100%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										205,
										22
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"374": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										95,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"375": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										37.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"376": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										15.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"377": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										23,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "366",
								"dest": "375"
							},
							{
								"src": "375",
								"dest": "367"
							},
							{
								"src": "366",
								"dest": "376"
							},
							{
								"src": "376",
								"dest": "371"
							},
							{
								"src": "366",
								"dest": "377"
							},
							{
								"src": "377",
								"dest": "369"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/FRule/79.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon"
			},
			"81": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						759,
						601
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.220033352977225,59.31990380498496%",
										"0;35.62694599549434,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;36.05036837709747,59.31990380498496%",
										"0;32.067751767195205,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;36.05036837709747,59.31990380498496%",
										"0;32.067751767195205,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;36.05036837709747,59.31990380498496%",
										"0;32.067751767195205,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;32.02508919033062,59.31990380498496%",
										"0;35.033746957444464,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;32.02508919033062,59.31990380498496%",
										"0;35.033746957444464,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;36.05036837709747,59.31990380498496%",
										"0;32.067751767195205,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.220033352977225,59.31990380498496%",
										"0;35.62694599549434,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;34.440256702390684,59.31990380498496%",
										"0;33.254149843294954,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;36.05036837709747,59.31990380498496%",
										"0;32.067751767195205,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;32.02508919033062,59.31990380498496%",
										"0;35.033746957444464,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;34.440256702390684,59.31990380498496%",
										"0;33.254149843294954,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;32.02508919033062,59.31990380498496%",
										"0;35.033746957444464,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;36.05036837709747,59.31990380498496%",
										"0;32.067751767195205,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.220033352977225,59.31990380498496%",
										"0;35.62694599549434,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;32.02508919033062,59.31990380498496%",
										"0;35.033746957444464,80.50558373533684%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416415"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.974720813233148,0%",
										"0;-40.96599519024926,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.974720813233148,0%",
										"0;-40.96599519024926,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.974720813233148,0%",
										"0;-40.96599519024926,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.949441626466296,0%",
										"0;-43.93199038049852,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-21.559553301173082,0%",
										"0;-42.74559230439877,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-24.77977665058654,0%",
										"0;-40.372796152199385,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.949441626466296,0%",
										"0;-43.93199038049852,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.949441626466296,0%",
										"0;-43.93199038049852,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.974720813233148,0%",
										"0;-40.96599519024926,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.974720813233148,0%",
										"0;-40.96599519024926,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.949441626466296,0%",
										"0;-43.93199038049852,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-21.559553301173082,0%",
										"0;-42.74559230439877,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-24.77977665058654,0%",
										"0;-40.372796152199385,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.949441626466296,0%",
										"0;-43.93199038049852,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-24.77977665058654,0%",
										"0;-40.372796152199385,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.949441626466296,0%",
										"0;-43.93199038049852,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;53.61564818416411"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/81.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/16.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/81.instance": "M731,563L759,601",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/81.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/79.instance": "M759.044585768675,601.0605092574876L786.9998100035638,638.9997421476937"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"82": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						841,
						727
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;13,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-13,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/82.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/79.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/82.instance": "M841,714L841,727",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/82.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon/7.instance": "M841,727L841,740"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"83": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						946,
						634.9998148919432
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-145.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-139.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-139.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-139.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-144.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-144.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-139.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-145.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-141.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-139.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-144.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-141.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-144.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-139.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-145.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.99954568411385,-100%",
										"0;-144.99981489194312,1.2246063538223773e-14%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-201.00059161095874,0%",
										"0;77.9232711328408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-201.00059161095874,0%",
										"0;77.9232711328408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-201.00059161095874,0%",
										"0;77.9232711328408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-196.00118322191736,0%",
										"0;77.84635715762477,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-198.0009465775339,0%",
										"0;77.87712274771116,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-202.000473288767,0%",
										"0;77.93865392788405,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-196.00118322191736,0%",
										"0;77.84635715762477,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-196.00118322191736,0%",
										"0;77.84635715762477,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-201.00059161095874,0%",
										"0;77.9232711328408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-201.00059161095874,0%",
										"0;77.9232711328408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-196.00118322191736,0%",
										"0;77.84635715762477,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-198.0009465775339,0%",
										"0;77.87712274771116,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-202.000473288767,0%",
										"0;77.93865392788405,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-196.00118322191736,0%",
										"0;77.84635715762477,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-202.000473288767,0%",
										"0;77.93865392788405,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-196.00118322191736,0%",
										"0;77.84635715762477,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.11859600341785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/83.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/79.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/83.instance": "M740,713L741,778L946,779L946,634.9998148919432",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/83.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/16.instance": "M946,634.9998148919432L946,485L682.0004543158861,485.00000000000006"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"0": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/Start"
			},
			"1": {
				"maxIterations": {
					"type": "int",
					"value": "1000"
				},
				"rule": {
					"type": "string",
					"value": "/Formalisms/LCA-new/improved/R_linkToSelf.model"
				},
				"name": {
					"type": "string",
					"value": "linkToSelf"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/FRule"
			},
			"2": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/initial"
			},
			"3": {
				"maxIterations": {
					"type": "int",
					"value": "1000"
				},
				"rule": {
					"type": "string",
					"value": "/Formalisms/LCA-new/improved/R_linkToParent.model"
				},
				"name": {
					"type": "string",
					"value": "linkToParent"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/FRule"
			},
			"4": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"5": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"6": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess"
			},
			"7": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail"
			},
			"16": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/LCA-new/improved/R_getLCA.model"
				},
				"name": {
					"type": "string",
					"value": "getLCA"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"25": {
				"ref": {
					"type": "string",
					"value": "/Formalisms/LCA-new/T_deleteTemp.model"
				},
				"name": {
					"type": "string",
					"value": "deleteTemp"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/CRule"
			},
			"28": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"29": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"76": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"78": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"79": {
				"maxIterations": {
					"type": "int",
					"value": "1000"
				},
				"rule": {
					"type": "string",
					"value": "/Formalisms/LCA-new/improved/R_linkToAncestors.model"
				},
				"name": {
					"type": "string",
					"value": "linkToAncestors"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/FRule"
			},
			"81": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"82": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"83": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			}
		},
		"edges": [
			{
				"src": "0",
				"dest": "2"
			},
			{
				"src": "2",
				"dest": "1"
			},
			{
				"src": "1",
				"dest": "4"
			},
			{
				"src": "4",
				"dest": "3"
			},
			{
				"src": "1",
				"dest": "5"
			},
			{
				"src": "5",
				"dest": "3"
			},
			{
				"src": "25",
				"dest": "28"
			},
			{
				"src": "28",
				"dest": "6"
			},
			{
				"src": "25",
				"dest": "29"
			},
			{
				"src": "29",
				"dest": "6"
			},
			{
				"src": "3",
				"dest": "76"
			},
			{
				"src": "76",
				"dest": "16"
			},
			{
				"src": "16",
				"dest": "78"
			},
			{
				"src": "78",
				"dest": "25"
			},
			{
				"src": "16",
				"dest": "81"
			},
			{
				"src": "81",
				"dest": "79"
			},
			{
				"src": "79",
				"dest": "82"
			},
			{
				"src": "82",
				"dest": "7"
			},
			{
				"src": "79",
				"dest": "83"
			},
			{
				"src": "83",
				"dest": "16"
			}
		],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif"
		]
	}
}