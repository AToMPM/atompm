{
	"types": {
		"__pTransition": [
			{
				"name": "__pLabel",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotIn",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotOut",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pMatchSubtypes",
				"type": "boolean",
				"default": false
			},
			{
				"name": "tname",
				"type": "code",
				"default": "\"[PYTHON]\"\n\"Example:\t result = True\"\n\"Example:\t result = getAttr()\"\n\n\"[JAVASCRIPT]\"\n\"Example:\t true\"\n\"Example:\t getAttr()\""
			}
		],
		"__pPlace": [
			{
				"name": "__pLabel",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotIn",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotOut",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pMatchSubtypes",
				"type": "boolean",
				"default": false
			},
			{
				"name": "pname",
				"type": "code",
				"default": "\"[PYTHON]\"\n\"Example:\t result = True\"\n\"Example:\t result = getAttr()\"\n\n\"[JAVASCRIPT]\"\n\"Example:\t true\"\n\"Example:\t getAttr()\""
			},
			{
				"name": "tokens",
				"type": "code",
				"default": "\"[PYTHON]\"\n\"Example:\t result = True\"\n\"Example:\t result = getAttr()\"\n\n\"[JAVASCRIPT]\"\n\"Example:\t true\"\n\"Example:\t getAttr()\""
			}
		],
		"__pT2P": [
			{
				"name": "__pLabel",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotIn",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotOut",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pMatchSubtypes",
				"type": "boolean",
				"default": false
			},
			{
				"name": "weight",
				"type": "code",
				"default": "\"[PYTHON]\"\n\"Example:\t result = True\"\n\"Example:\t result = getAttr()\"\n\n\"[JAVASCRIPT]\"\n\"Example:\t true\"\n\"Example:\t getAttr()\""
			}
		],
		"__pP2T": [
			{
				"name": "__pLabel",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotIn",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotOut",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pMatchSubtypes",
				"type": "boolean",
				"default": false
			},
			{
				"name": "weight",
				"type": "code",
				"default": "\"[PYTHON]\"\n\"Example:\t result = True\"\n\"Example:\t result = getAttr()\"\n\n\"[JAVASCRIPT]\"\n\"Example:\t true\"\n\"Example:\t getAttr()\""
			}
		],
		"__pinhibitor": [
			{
				"name": "__pLabel",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotIn",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pPivotOut",
				"type": "string",
				"default": ""
			},
			{
				"name": "__pMatchSubtypes",
				"type": "boolean",
				"default": false
			}
		]
	},
	"constraints": [],
	"actions": [
		{
			"name": "distinctPLabels",
			"event": "post-create",
			"code": "if( getAttr(\"__pLabel\") == \"\" )\n{\n\tvar pLabels = getAllNodes().\n\t\t\t\t\t\t\tfilter( function(n) {return hasAttr(\"__pLabel\",n);} ).\n\t\t\t\t\t\t\t\tmap( function(n) {return getAttr(\"__pLabel\",n);} ),\n\t\t i\t\t\t= \"0\";\n\n\twhile( _utils.contains(pLabels,i) )\n\t\ti = String(parseInt(i)+1);\n\tsetAttr(\"__pLabel\",i);\n}",
			"targetType": "*"
		}
	],
	"cardinalities": {
		"__pTransition": [
			{
				"dir": "out",
				"type": "__pT2P",
				"min": 0,
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "__pP2T",
				"min": 0,
				"max": "Infinity"
			},
			{
				"dir": "in",
				"type": "__pinhibitor",
				"min": 0,
				"max": "Infinity"
			}
		],
		"__pPlace": [
			{
				"dir": "in",
				"type": "__pT2P",
				"min": 0,
				"max": "Infinity"
			},
			{
				"dir": "out",
				"type": "__pP2T",
				"min": 0,
				"max": "Infinity"
			},
			{
				"dir": "out",
				"type": "__pinhibitor",
				"min": 0,
				"max": "Infinity"
			}
		],
		"__pT2P": [
			{
				"dir": "in",
				"type": "__pTransition",
				"min": 0,
				"max": "1"
			},
			{
				"dir": "out",
				"type": "__pPlace",
				"min": 0,
				"max": "1"
			}
		],
		"__pP2T": [
			{
				"dir": "in",
				"type": "__pPlace",
				"min": 0,
				"max": "1"
			},
			{
				"dir": "out",
				"type": "__pTransition",
				"min": 0,
				"max": "1"
			}
		],
		"__pinhibitor": [
			{
				"dir": "in",
				"type": "__pPlace",
				"min": 0,
				"max": "1"
			},
			{
				"dir": "out",
				"type": "__pTransition",
				"min": 0,
				"max": "1"
			}
		]
	},
	"legalConnections": {
		"__pTransition": {
			"__pPlace": [
				"__pT2P"
			]
		},
		"__pPlace": {
			"__pTransition": [
				"__pP2T",
				"__pinhibitor"
			]
		}
	},
	"connectorTypes": {
		"__pT2P": "visual",
		"__pP2T": "visual",
		"__pinhibitor": "visual"
	},
	"types2parentTypes": {
		"__pTransition": [],
		"__pPlace": [],
		"__pT2P": [],
		"__pP2T": [],
		"__pinhibitor": []
	}
}