{
	"csm": {
		"nodes": {
			"0": {
				"typename": {
					"type": "string",
					"value": "ExhaustRandomIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						"593",
						"253"
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"37": {
								"width": {
									"type": "double",
									"value": "200"
								},
								"height": {
									"type": "double",
									"value": "100"
								},
								"cornerRadius": {
									"type": "double",
									"value": "10"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										0,
										-1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"38": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,15 l-5,0 l0,35 l5,0 l-10,15 l-10,-15 l5,0 l0-35 l-5,0z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#3CB371",
										"stroke-dasharray": "",
										"fill": "#3CB371",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										211,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"39": {
								"distance": {
									"type": "double",
									"value": 0
								},
								"alignment": {
									"type": "ENUM(\"top\",\"bottom\",\"center\")",
									"value": "center"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/RightOf",
								"position": {
									"type": "list<double>",
									"value": [
										197.4989985080956,
										45.99899850809555
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#ff0000",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							},
							"40": {
								"textContent": {
									"type": "string",
									"value": "R_PacMoveLeft"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "var filenames = getAttr('filenames').map(\n\t\t\t\tfunction(f)\n\t\t\t\t{\n\t\t\t\t\treturn f.match(/.*\\/(.*)\\.model/)[1];\n\t\t\t\t});\n\n({'textContent': filenames.join('\\n')})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										-3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"41": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.890662583693938,
										4.548997593600802
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "38",
								"dest": 39
							},
							{
								"src": 39,
								"dest": "37"
							},
							{
								"src": "37",
								"dest": 41
							},
							{
								"src": 41,
								"dest": "40"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/Transformation/ExhaustRandom/0.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/Transformation.defaultIcons/ExhaustRandomIcon"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/Transformation.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"0": {
				"filenames": {
					"type": "list<string>",
					"value": [
						"/Formalisms/Pacman/OpSem/R_PacMoveLeft.model"
					]
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"$type": "/Formalisms/__Transformations__/Transformation/Transformation/ExhaustRandom"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/Transformation"
		]
	}
}