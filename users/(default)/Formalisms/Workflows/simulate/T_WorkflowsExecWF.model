{
	"csm": {
		"nodes": {
			"117": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						408,
						150
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"21": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/Start/117.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon"
			},
			"118": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						318,
						206
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "TerminateManTask"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/118.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"120": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						509,
						305
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "GetInitialTask"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/120.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"121": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						292,
						421.79089999999997
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "IsFinaltask"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/121.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"125": {
				"typename": {
					"type": "string",
					"value": "EndSuccessIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						333,
						514.1836
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"23": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#008000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"26": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#008000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none",
										"": ""
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"27": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.492540538484263,
										6.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "23",
								"dest": "27"
							},
							{
								"src": "27",
								"dest": "26"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess/125.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon"
			},
			"126": {
				"typename": {
					"type": "string",
					"value": "EndSuccessIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						496,
						1308.9407
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"23": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#008000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"26": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#008000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none",
										"": ""
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"27": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.492540538484263,
										6.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "23",
								"dest": "27"
							},
							{
								"src": "27",
								"dest": "26"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess/126.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon"
			},
			"127": {
				"typename": {
					"type": "string",
					"value": "EndFailIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						651,
						437
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"451": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#800000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"455": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"456": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"457": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.363811097006419,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"458": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.3638135362075445,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "451",
								"dest": "457"
							},
							{
								"src": "457",
								"dest": "455"
							},
							{
								"src": "451",
								"dest": "458"
							},
							{
								"src": "458",
								"dest": "456"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail/127.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon"
			},
			"128": {
				"typename": {
					"type": "string",
					"value": "EndFailIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						686,
						1307.1983
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"451": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#800000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"455": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"456": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"457": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.363811097006419,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"458": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.3638135362075445,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "451",
								"dest": "457"
							},
							{
								"src": "457",
								"dest": "455"
							},
							{
								"src": "451",
								"dest": "458"
							},
							{
								"src": "458",
								"dest": "456"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail/128.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon"
			},
			"129": {
				"typename": {
					"type": "string",
					"value": "EndFailIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						431,
						517.6870999999999
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"451": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#800000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"455": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"456": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"457": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.363811097006419,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"458": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.3638135362075445,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "451",
								"dest": "457"
							},
							{
								"src": "457",
								"dest": "455"
							},
							{
								"src": "451",
								"dest": "458"
							},
							{
								"src": "458",
								"dest": "456"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail/129.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon"
			},
			"186": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "initialLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						421,
						194
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;25.999423816568026,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-26,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/initial/186.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon/117.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/186.instance": "M421,168L421,194",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/186.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/118.instance": "M421,194.0776469562289L421,219.99942381656803"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink"
			},
			"188": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						662,
						418.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;28.499474299784538,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-28.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/188.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/120.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/188.instance": "M662,390L662,418.5",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/188.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon/127.instance": "M662,418.57741062967807L662,446.99947429978454"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"189": {
				"typename": {
					"type": "string",
					"value": "CRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						498,
						540
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"596": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										86
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"597": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										95,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"598": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										86
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"600": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										86
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"601": {
								"width": {
									"type": "double",
									"value": 210
								},
								"height": {
									"type": "double",
									"value": 60
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										24
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"602": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										44,
										43
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"603": {
								"textContent": {
									"type": "string",
									"value": "EvalCtrlNode"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										52,
										43
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"604": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"605": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										45,
										43
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"606": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										27.380101318328116,
										42.57653018725193
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"607": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										19.861485400667107,
										42.60135036424299
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"608": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										41.75,
										42.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"1235": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										33.386267245208956,
										40.06338011405069
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "604",
								"dest": "606"
							},
							{
								"src": "606",
								"dest": "605"
							},
							{
								"src": "604",
								"dest": "607"
							},
							{
								"src": "607",
								"dest": "602"
							},
							{
								"src": "604",
								"dest": "608"
							},
							{
								"src": "608",
								"dest": "603"
							},
							{
								"src": "601",
								"dest": "1235"
							},
							{
								"src": "1235",
								"dest": "602"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/CRule/189.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon"
			},
			"193": {
				"typename": {
					"type": "string",
					"value": "BRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						327,
						605.45
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.0160539215686275,
						2.1872896301885207
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"628": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										360,
										199
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"629": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										263,
										15
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"630": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										360,
										199
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"632": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										163,
										199
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"633": {
								"width": {
									"type": "double",
									"value": 510
								},
								"height": {
									"type": "double",
									"value": 160
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										14,
										37
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"634": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										57,
										48
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"635": {
								"textContent": {
									"type": "string",
									"value": "ExecAutoTask"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										65,
										48
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"636": {
								"width": {
									"type": "double",
									"value": 500
								},
								"height": {
									"type": "double",
									"value": 150
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										19,
										42
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"637": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										58,
										48
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"638": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.380101318328116,
										55.57653018725193
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"639": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										32.86148540066711,
										55.60135036424299
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"640": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										54.75,
										55.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"1234": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										46.386267245208956,
										53.06338011405069
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "636",
								"dest": "638"
							},
							{
								"src": "638",
								"dest": "637"
							},
							{
								"src": "636",
								"dest": "639"
							},
							{
								"src": "639",
								"dest": "634"
							},
							{
								"src": "636",
								"dest": "640"
							},
							{
								"src": "640",
								"dest": "635"
							},
							{
								"src": "633",
								"dest": "1234"
							},
							{
								"src": "1234",
								"dest": "634"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/BRule/193.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon"
			},
			"216": {
				"typename": {
					"type": "string",
					"value": "BRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						349,
						1071.8393
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						0.9476,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"628": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										360,
										199
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"629": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										263,
										15
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"630": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										360,
										199
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"632": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										163,
										199
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"633": {
								"width": {
									"type": "double",
									"value": 510
								},
								"height": {
									"type": "double",
									"value": 160
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										14,
										37
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"634": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										57,
										48
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"635": {
								"textContent": {
									"type": "string",
									"value": "ExecManTask"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										65,
										48
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"636": {
								"width": {
									"type": "double",
									"value": 500
								},
								"height": {
									"type": "double",
									"value": 150
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										19,
										42
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"637": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										58,
										48
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"638": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.380101318328116,
										55.57653018725193
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"639": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										32.86148540066711,
										55.60135036424299
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"640": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										54.75,
										55.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"1234": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										46.386267245208956,
										53.06338011405069
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "636",
								"dest": "638"
							},
							{
								"src": "638",
								"dest": "637"
							},
							{
								"src": "636",
								"dest": "639"
							},
							{
								"src": "639",
								"dest": "634"
							},
							{
								"src": "636",
								"dest": "640"
							},
							{
								"src": "640",
								"dest": "635"
							},
							{
								"src": "633",
								"dest": "1234"
							},
							{
								"src": "1234",
								"dest": "634"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/BRule/216.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon"
			},
			"223": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						345,
						524.8693
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-5,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-5,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-8,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-5,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-8,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-5,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-5,6.123031769111886e-15%",
										"0;-1.1082072543619006,-100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/223.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/121.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/223.instance": "M345,508.36929999999995L345,524.8693",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/223.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon/125.instance": "M345,524.9485184794718L345,523.761092745638"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"224": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						443,
						522.8693
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-3.79037960341185,-98.02837625692415%",
										"0;3.316427795914933,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.9759490085295965,-98.02837625692415%",
										"0;9.198130371330421,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.9759490085295965,-98.02837625692415%",
										"0;9.198130371330421,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.9759490085295965,-98.02837625692415%",
										"0;9.198130371330421,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-3.9879745042647983,-98.02837625692415%",
										"0;4.296711558484276,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-3.9879745042647983,-98.02837625692415%",
										"0;4.296711558484276,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.9759490085295965,-98.02837625692415%",
										"0;9.198130371330421,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-3.79037960341185,-98.02837625692415%",
										"0;3.316427795914933,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.5807592068237,-98.02837625692415%",
										"0;7.237562846191963,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.9759490085295965,-98.02837625692415%",
										"0;9.198130371330421,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-3.9879745042647983,-98.02837625692415%",
										"0;4.296711558484276,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.5807592068237,-98.02837625692415%",
										"0;7.237562846191963,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-3.9879745042647983,-98.02837625692415%",
										"0;4.296711558484276,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.9759490085295965,-98.02837625692415%",
										"0;9.198130371330421,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-3.79037960341185,-98.02837625692415%",
										"0;3.316427795914933,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-3.9879745042647983,-98.02837625692415%",
										"0;4.296711558484276,-19.759490085296%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.60364949867514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-16.499999999999886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/224.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/121.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/224.instance": "M443,506.36930000000007L443,522.8693",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/224.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon/129.instance": "M443,522.9485184794719L440,522.264592745638"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"229": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						626.3783024644505,
						648.5877354326054
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.03863750244136,-81.11763787473846%",
										"0;18.656639420159536,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-15.529828050185188,-81.11763787473846%",
										"0;23.52369769264385,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-15.529828050185188,-81.11763787473846%",
										"0;23.52369769264385,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-15.529828050185188,-81.11763787473846%",
										"0;23.52369769264385,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.45383592706537,-81.11763787473846%",
										"0;19.46781579890694,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.45383592706537,-81.11763787473846%",
										"0;19.46781579890694,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-15.529828050185188,-81.11763787473846%",
										"0;23.52369769264385,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.03863750244136,-81.11763787473846%",
										"0;18.656639420159536,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.699431200937283,-81.11763787473846%",
										"0;21.901344935149154,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-15.529828050185188,-81.11763787473846%",
										"0;23.52369769264385,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.45383592706537,-81.11763787473846%",
										"0;19.46781579890694,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.699431200937283,-81.11763787473846%",
										"0;21.901344935149154,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.45383592706537,-81.11763787473846%",
										"0;19.46781579890694,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-15.529828050185188,-81.11763787473846%",
										"0;23.52369769264385,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.03863750244136,-81.11763787473846%",
										"0;18.656639420159536,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.45383592706537,-81.11763787473846%",
										"0;19.46781579890694,58.48015753760241%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.545705412429584,0%",
										"0;-11.531853538868518,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.545705412429584,0%",
										"0;-11.531853538868518,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.545705412429584,0%",
										"0;-11.531853538868518,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.469713289309766,0%",
										"0;-7.475971645131608,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.30011013855767,0%",
										"0;-9.098324402626304,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.960903837053593,0%",
										"0;-12.343029917615922,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.469713289309766,0%",
										"0;-7.475971645131608,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.469713289309766,0%",
										"0;-7.475971645131608,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.545705412429584,0%",
										"0;-11.531853538868518,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.545705412429584,0%",
										"0;-11.531853538868518,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.469713289309766,0%",
										"0;-7.475971645131608,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.30011013855767,0%",
										"0;-9.098324402626304,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.960903837053593,0%",
										"0;-12.343029917615922,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.469713289309766,0%",
										"0;-7.475971645131608,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.960903837053593,0%",
										"0;-12.343029917615922,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.469713289309766,0%",
										"0;-7.475971645131608,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;144.21102654081673"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/229.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon/189.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/229.instance": "M648,633L626.3783024644505,648.5877354326054",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/229.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance": "M626.4393806338707,648.5437023337212L605.000458660505,663.9996693377755"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"231": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						654,
						1080
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-45.18063575389397,-89.06052649078089%",
										"0;27.56229053031484,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.45197281460196,-89.06052649078089%",
										"0;32.9059221197615,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.45197281460196,-89.06052649078089%",
										"0;32.9059221197615,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.45197281460196,-89.06052649078089%",
										"0;32.9059221197615,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-44.72585859734522,-89.06052649078089%",
										"0;28.452895795222503,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-44.72585859734522,-89.06052649078089%",
										"0;28.452895795222503,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.45197281460196,-89.06052649078089%",
										"0;32.9059221197615,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-45.18063575389397,-89.06052649078089%",
										"0;27.56229053031484,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-43.36152712769922,-89.06052649078089%",
										"0;31.124711589945946,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.45197281460196,-89.06052649078089%",
										"0;32.9059221197615,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-44.72585859734522,-89.06052649078089%",
										"0;28.452895795222503,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-43.36152712769922,-89.06052649078089%",
										"0;31.124711589945946,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-44.72585859734522,-89.06052649078089%",
										"0;28.452895795222503,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-42.45197281460196,-89.06052649078089%",
										"0;32.9059221197615,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-45.18063575389397,-89.06052649078089%",
										"0;27.56229053031484,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-44.72585859734522,-89.06052649078089%",
										"0;28.452895795222503,45.477715654866785%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.94940299291392"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.27388578274338,0%",
										"0;-19.546973675461004,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.27388578274338,0%",
										"0;-19.546973675461004,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.27388578274338,0%",
										"0;-19.546973675461004,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;51.54777156548664,0%",
										"0;-15.093947350922008,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;50.63821725238938,0%",
										"0;-16.87515788073756,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;48.819108626194634,0%",
										"0;-20.437578940368667,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;51.54777156548664,0%",
										"0;-15.093947350922008,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;51.54777156548664,0%",
										"0;-15.093947350922008,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.27388578274338,0%",
										"0;-19.546973675461004,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.27388578274338,0%",
										"0;-19.546973675461004,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;51.54777156548664,0%",
										"0;-15.093947350922008,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;50.63821725238938,0%",
										"0;-16.87515788073756,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;48.819108626194634,0%",
										"0;-20.437578940368667,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;51.54777156548664,0%",
										"0;-15.093947350922008,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;48.819108626194634,0%",
										"0;-20.437578940368667,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;51.54777156548664,0%",
										"0;-15.093947350922008,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;152.9494029929139"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/231.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/231.instance": "M701,1056L654,1080",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/231.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/216.instance": "M653.9329850541981,1080.0342203978562L607.0002556199114,1103.9998694706835"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"233": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						506,
						1299
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.000000000000114,6.278479255591995e-13%",
										"0;17.999168209876643,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;89.99999999999964"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-18,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/233.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/216.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/233.instance": "M506,1281L506,1299",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/233.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon/126.instance": "M506,1299.078856918637L506.0000000000001,1316.9991682098766"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"234": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						695,
						1297.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,6.123031769111886e-15%",
										"0;19.499232084154983,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10,0%",
										"0;-19.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/234.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/216.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/234.instance": "M695,1278L695,1297.5",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/234.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon/128.instance": "M695,1297.5785524427324L695,1316.999232084155"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"235": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						540.64793094067,
						304.52999998097505
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.14625918493675,98.0049940733436%",
										"0;10.54963489104955,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;73.33876750443062,98.0049940733436%",
										"0;4.669335246648927,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;73.33876750443062,98.0049940733436%",
										"0;4.669335246648927,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;73.33876750443062,98.0049940733436%",
										"0;4.669335246648927,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.34501057151908,98.0049940733436%",
										"0;9.569584950316141,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.34501057151908,98.0049940733436%",
										"0;9.569584950316141,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;73.33876750443062,98.0049940733436%",
										"0;4.669335246648927,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.14625918493675,98.0049940733436%",
										"0;10.54963489104955,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.94126473126596,98.0049940733436%",
										"0;6.6294351281158015,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;73.33876750443062,98.0049940733436%",
										"0;4.669335246648927,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.34501057151908,98.0049940733436%",
										"0;9.569584950316141,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.94126473126596,98.0049940733436%",
										"0;6.6294351281158015,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.34501057151908,98.0049940733436%",
										"0;9.569584950316141,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;73.33876750443062,98.0049940733436%",
										"0;4.669335246648927,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.14625918493675,98.0049940733436%",
										"0;10.54963489104955,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;72.34501057151908,98.0049940733436%",
										"0;9.569584950316141,19.87513865823045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692514"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.65417400775846,0%",
										"0;-19.430249684642206,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.65417400775846,0%",
										"0;-19.430249684642206,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.65417400775846,0%",
										"0;-19.430249684642206,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-69.66041707484692,0%",
										"0;-24.33049938830942,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.05791984801158,0%",
										"0;-22.370399506842546,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.85292539434079,0%",
										"0;-18.450199743908797,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-69.66041707484692,0%",
										"0;-24.33049938830942,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-69.66041707484692,0%",
										"0;-24.33049938830942,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.65417400775846,0%",
										"0;-19.430249684642206,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.65417400775846,0%",
										"0;-19.430249684642206,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-69.66041707484692,0%",
										"0;-24.33049938830942,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.05791984801158,0%",
										"0;-22.370399506842546,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.85292539434079,0%",
										"0;-18.450199743908797,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-69.66041707484692,0%",
										"0;-24.33049938830942,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.85292539434079,0%",
										"0;-18.450199743908797,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-69.66041707484692,0%",
										"0;-24.33049938830942,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.463953015692564"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/235.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/118.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/235.instance": "M469,290L540.64793094067,304.52999998097505",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/235.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/120.instance": "M540.6475228558318,304.52991722251136L611.9991845792775,318.99983463495835"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"254": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						598.0000000000001,
						454.2454634755863
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9999999999998863,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9999999999998863,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9999999999998863,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.999999999999886,-1.0489927069340377e-13%",
										"0;98.7542425990004,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90.00000000000006"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-34.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-34.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-34.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-29.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-31.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-35.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-29.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-29.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-34.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-34.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-29.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-31.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-35.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-29.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-35.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-29.000000000000114,0%",
										"0;-59.816892047014846,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/254.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/120.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/254.instance": "M559,394.42857142857144L559,451L598,451L598.0000000000001,454.24546347558635",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/254.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon/189.instance": "M598,454.24330924587014L598,552.9997060745867"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"255": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						492,
						1150.5180999999998
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "ExecuteEditModel"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/255.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"256": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "branchLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						473.3125,
						1132.9476630645752
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;129.93883653086795,91.35160465409884%",
										"0;53.485069123163385,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.37965270125778,91.35160465409884%",
										"0;48.00397284391738,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.37965270125778,91.35160465409884%",
										"0;48.00397284391738,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.37965270125778,91.35160465409884%",
										"0;48.00397284391738,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;130.34563922593293,91.35160465409884%",
										"0;52.571553076622195,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;130.34563922593293,91.35160465409884%",
										"0;52.571553076622195,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.37965270125778,91.35160465409884%",
										"0;48.00397284391738,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;129.93883653086795,91.35160465409884%",
										"0;53.485069123163385,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;131.56604731112782,91.35160465409884%",
										"0;49.83100493699931,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.37965270125778,91.35160465409884%",
										"0;48.00397284391738,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;130.34563922593293,91.35160465409884%",
										"0;52.571553076622195,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;131.56604731112782,91.35160465409884%",
										"0;49.83100493699931,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;130.34563922593293,91.35160465409884%",
										"0;52.571553076622195,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.37965270125778,91.35160465409884%",
										"0;48.00397284391738,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;129.93883653086795,91.35160465409884%",
										"0;53.485069123163385,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;130.34563922593293,91.35160465409884%",
										"0;52.571553076622195,40.68026950649697%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.004142717908007"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-122.1067426907328,0%",
										"0;-65.5955263881699,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-122.1067426907328,0%",
										"0;-65.5955263881699,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-122.1067426907328,0%",
										"0;-65.5955263881699,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-119.9009853814656,0%",
										"0;-70.08268971176471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-120.7832883051725,0%",
										"0;-68.28782438232679,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-122.54789415258625,0%",
										"0;-64.69809372345094,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-119.9009853814656,0%",
										"0;-70.08268971176471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-119.9009853814656,0%",
										"0;-70.08268971176471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-122.1067426907328,0%",
										"0;-65.5955263881699,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-122.1067426907328,0%",
										"0;-65.5955263881699,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-119.9009853814656,0%",
										"0;-70.08268971176471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-120.7832883051725,0%",
										"0;-68.28782438232679,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-122.54789415258625,0%",
										"0;-64.69809372345094,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-119.9009853814656,0%",
										"0;-70.08268971176471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-122.54789415258625,0%",
										"0;-64.69809372345094,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-119.9009853814656,0%",
										"0;-70.08268971176471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.177372032946394"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/branch/256.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/216.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/256.instance": "M349,1071.8393L473.3125,1132.9476630645752",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/256.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/255.instance": "M473.3795256083555,1132.9806108792359L601.6241257506081,1190.0867963739024"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink"
			},
			"257": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						369,
						754.3084999999999
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "ExecuteOpenModel"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/257.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"258": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						610,
						754.3084999999999
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "ExecuteSaveModel"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/258.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"259": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						367,
						844.3084999999999
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "ExecGenerateAS"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/259.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"260": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						610,
						843.3084999999999
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "ExecGenerateCS"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/260.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"261": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						365,
						922.3084999999999
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "ExecLoadToolbar"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/261.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"262": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						608,
						922.3084999999999
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "ExecGeneratePMM"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/262.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"263": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "branchLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						401.1484375,
						700.6247630645753
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.11780728187097,66.99358374990813%",
										"0;90.57272665478581,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;91.57232129024925,66.99358374990813%",
										"0;86.55311162979137,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;91.57232129024925,66.99358374990813%",
										"0;86.55311162979137,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;91.57232129024925,66.99358374990813%",
										"0;86.55311162979137,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.86022628326737,66.99358374990813%",
										"0;89.9027908172867,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.86022628326737,66.99358374990813%",
										"0;89.9027908172867,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;91.57232129024925,66.99358374990813%",
										"0;86.55311162979137,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.11780728187097,66.99358374990813%",
										"0;90.57272665478581,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;90.08748328745651,66.99358374990813%",
										"0;87.89298330478948,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;91.57232129024925,66.99358374990813%",
										"0;86.55311162979137,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.86022628326737,66.99358374990813%",
										"0;89.9027908172867,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;90.08748328745651,66.99358374990813%",
										"0;87.89298330478948,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.86022628326737,66.99358374990813%",
										"0;89.9027908172867,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;91.57232129024925,66.99358374990813%",
										"0;86.55311162979137,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.11780728187097,66.99358374990813%",
										"0;90.57272665478581,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.86022628326737,66.99358374990813%",
										"0;89.9027908172867,74.24190013963843%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;47.937887096448726"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.20416048154777,0%",
										"0;-98.2476572706471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.20416048154777,0%",
										"0;-98.2476572706471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.20416048154777,0%",
										"0;-98.2476572706471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-66.25988346309555,0%",
										"0;-101.32055147671883,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-67.83759427047647,0%",
										"0;-100.09139379429018,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.99301588523821,0%",
										"0;-97.63307842943266,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-66.25988346309555,0%",
										"0;-101.32055147671883,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-66.25988346309555,0%",
										"0;-101.32055147671883,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.20416048154777,0%",
										"0;-98.2476572706471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.20416048154777,0%",
										"0;-98.2476572706471,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-66.25988346309555,0%",
										"0;-101.32055147671883,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-67.83759427047647,0%",
										"0;-100.09139379429018,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.99301588523821,0%",
										"0;-97.63307842943266,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-66.25988346309555,0%",
										"0;-101.32055147671883,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-70.99301588523821,0%",
										"0;-97.63307842943266,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-66.25988346309555,0%",
										"0;-101.32055147671883,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;52.078675485931946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/branch/263.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/263.instance": "M327,605.45L401.1484375,700.6247630645753",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/263.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/257.instance": "M401.2405852418466,700.74304120762L485.2965687762854,793.8772330693574"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink"
			},
			"264": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "branchLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						520.546875,
						700.6247630645753
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.21234865037673,90.91315901601342%",
										"0;89.61606016298572,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;207.71140268417128,90.91315901601342%",
										"0;84.16127062202497,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;207.71140268417128,90.91315901601342%",
										"0;84.16127062202497,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;207.71140268417128,90.91315901601342%",
										"0;84.16127062202497,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.62885765600925,90.91315901601342%",
										"0;88.70692857282563,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.62885765600925,90.91315901601342%",
										"0;88.70692857282563,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;207.71140268417128,90.91315901601342%",
										"0;84.16127062202497,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.21234865037673,90.91315901601342%",
										"0;89.61606016298572,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;206.87838467290646,90.91315901601342%",
										"0;85.97953380234526,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;207.71140268417128,90.91315901601342%",
										"0;84.16127062202497,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.62885765600925,90.91315901601342%",
										"0;88.70692857282563,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;206.87838467290646,90.91315901601342%",
										"0;85.97953380234526,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.62885765600925,90.91315901601342%",
										"0;88.70692857282563,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;207.71140268417128,90.91315901601342%",
										"0;84.16127062202497,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.21234865037673,90.91315901601342%",
										"0;89.61606016298572,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.62885765600925,90.91315901601342%",
										"0;88.70692857282563,41.650900563241805%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;24.61438175896114"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-191.3405049258795,0%",
										"0;-99.66162511906555,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-191.3405049258795,0%",
										"0;-99.66162511906555,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-191.3405049258795,0%",
										"0;-99.66162511906555,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.13413485175886,0%",
										"0;-104.14848717355596,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-190.01668288140706,0%",
										"0;-102.35374235175982,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-191.7817789407036,0%",
										"0;-98.76425270816753,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.13413485175886,0%",
										"0;-104.14848717355596,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.13413485175886,0%",
										"0;-104.14848717355596,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-191.3405049258795,0%",
										"0;-99.66162511906555,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-191.3405049258795,0%",
										"0;-99.66162511906555,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.13413485175886,0%",
										"0;-104.14848717355596,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-190.01668288140706,0%",
										"0;-102.35374235175982,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-191.7817789407036,0%",
										"0;-98.76425270816753,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.13413485175886,0%",
										"0;-104.14848717355596,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-191.7817789407036,0%",
										"0;-98.76425270816753,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.13413485175886,0%",
										"0;-104.14848717355596,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;26.185196579545764"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/branch/264.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/264.instance": "M327,605.45L520.546875,700.6247630645753",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/264.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/258.instance": "M520.6140471556655,700.6577943082984L724.0931876278471,793.8773495882016"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink"
			},
			"265": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "branchLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						394.15234375,
						745.6247630645753
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;80.64488629159803,48.73084501421686%",
										"0;136.3028421096153,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;85.8842657471368,48.73084501421686%",
										"0;133.37899140876232,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;85.8842657471368,48.73084501421686%",
										"0;133.37899140876232,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;85.8842657471368,48.73084501421686%",
										"0;133.37899140876232,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.51811620085448,48.73084501421686%",
										"0;135.8155336594731,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.51811620085448,48.73084501421686%",
										"0;135.8155336594731,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;85.8842657471368,48.73084501421686%",
										"0;133.37899140876232,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;80.64488629159803,48.73084501421686%",
										"0;136.3028421096153,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;84.13780592862389,48.73084501421686%",
										"0;134.35360830904665,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;85.8842657471368,48.73084501421686%",
										"0;133.37899140876232,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.51811620085448,48.73084501421686%",
										"0;135.8155336594731,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;84.13780592862389,48.73084501421686%",
										"0;134.35360830904665,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.51811620085448,48.73084501421686%",
										"0;135.8155336594731,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;85.8842657471368,48.73084501421686%",
										"0;133.37899140876232,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;80.64488629159803,48.73084501421686%",
										"0;136.3028421096153,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.51811620085448,48.73084501421686%",
										"0;135.8155336594731,87.32299092564556%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;60.836173194919375"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.64307896507205,0%",
										"0;-142.3349785860936,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.64307896507205,0%",
										"0;-142.3349785860936,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.64307896507205,0%",
										"0;-142.3349785860936,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.1338141801441,0%",
										"0;-144.49519410761195,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-59.937520094115314,0%",
										"0;-143.63110789900463,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-63.54493192205763,0%",
										"0;-141.90293548178988,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.1338141801441,0%",
										"0;-144.49519410761195,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.1338141801441,0%",
										"0;-144.49519410761195,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.64307896507205,0%",
										"0;-142.3349785860936,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.64307896507205,0%",
										"0;-142.3349785860936,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.1338141801441,0%",
										"0;-144.49519410761195,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-59.937520094115314,0%",
										"0;-143.63110789900463,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-63.54493192205763,0%",
										"0;-141.90293548178988,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.1338141801441,0%",
										"0;-144.49519410761195,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-63.54493192205763,0%",
										"0;-141.90293548178988,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.1338141801441,0%",
										"0;-144.49519410761195,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.4027092858427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/branch/265.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/265.instance": "M327,605.45L394.15234375,745.6247630645753",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/265.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/259.instance": "M394.18471103881836,745.6923270063199L471.3043104045722,883.8768389747593"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink"
			},
			"266": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "branchLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						515.65234375,
						745.1247630645753
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;200.93122892956433,82.17577254056663%",
										"0;134.46548941033632,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.35025110944264,82.17577254056663%",
										"0;129.5349430579023,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.35025110944264,82.17577254056663%",
										"0;129.5349430579023,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.35025110944264,82.17577254056663%",
										"0;129.5349430579023,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;201.50106595954412,82.17577254056663%",
										"0;133.64373168493069,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;201.50106595954412,82.17577254056663%",
										"0;133.64373168493069,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.35025110944264,82.17577254056663%",
										"0;129.5349430579023,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;200.93122892956433,82.17577254056663%",
										"0;134.46548941033632,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;203.21057704948322,82.17577254056663%",
										"0;131.17845850871367,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.35025110944264,82.17577254056663%",
										"0;129.5349430579023,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;201.50106595954412,82.17577254056663%",
										"0;133.64373168493069,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;203.21057704948322,82.17577254056663%",
										"0;131.17845850871367,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;201.50106595954412,82.17577254056663%",
										"0;133.64373168493069,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.35025110944264,82.17577254056663%",
										"0;129.5349430579023,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;200.93122892956433,82.17577254056663%",
										"0;134.46548941033632,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;201.50106595954412,82.17577254056663%",
										"0;133.64373168493069,56.98370299797176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;34.738862140948946"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.67713742022204,0%",
										"0;-143.69323880734748,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.67713742022204,0%",
										"0;-143.69323880734748,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.67713742022204,0%",
										"0;-143.69323880734748,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-182.70193109044402,0%",
										"0;-147.71171455011972,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-183.8920136223552,0%",
										"0;-146.10432425301087,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-186.27217868617765,0%",
										"0;-142.88954365879306,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-182.70193109044402,0%",
										"0;-147.71171455011972,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-182.70193109044402,0%",
										"0;-147.71171455011972,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.67713742022204,0%",
										"0;-143.69323880734748,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.67713742022204,0%",
										"0;-143.69323880734748,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-182.70193109044402,0%",
										"0;-147.71171455011972,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-183.8920136223552,0%",
										"0;-146.10432425301087,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-186.27217868617765,0%",
										"0;-142.88954365879306,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-182.70193109044402,0%",
										"0;-147.71171455011972,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-186.27217868617765,0%",
										"0;-142.88954365879306,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-182.70193109044402,0%",
										"0;-147.71171455011972,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;36.51557391134712"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/branch/266.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/266.instance": "M327,605.45L515.65234375,745.1247630645753",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/266.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/260.instance": "M515.7125259403035,745.1693208633507L714.3042245596455,882.8772833765343"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink"
			},
			"267": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "branchLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						394.5703125,
						784.6247630645753
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.23452317847045,40.09152455172046%",
										"0;175.648539383325,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;86.73121407143753,40.09152455172046%",
										"0;173.24304791022178,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;86.73121407143753,40.09152455172046%",
										"0;173.24304791022178,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;86.73121407143753,40.09152455172046%",
										"0;173.24304791022178,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82.15063832729828,40.09152455172046%",
										"0;175.24762413780786,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82.15063832729828,40.09152455172046%",
										"0;175.24762413780786,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;86.73121407143753,40.09152455172046%",
										"0;173.24304791022178,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.23452317847045,40.09152455172046%",
										"0;175.648539383325,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;84.89898377378188,40.09152455172046%",
										"0;174.04487840125614,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;86.73121407143753,40.09152455172046%",
										"0;173.24304791022178,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82.15063832729828,40.09152455172046%",
										"0;175.24762413780786,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;84.89898377378188,40.09152455172046%",
										"0;174.04487840125614,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82.15063832729828,40.09152455172046%",
										"0;175.24762413780786,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;86.73121407143753,40.09152455172046%",
										"0;173.24304791022178,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.23452317847045,40.09152455172046%",
										"0;175.648539383325,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82.15063832729828,40.09152455172046%",
										"0;175.24762413780786,91.61151488278531%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;66.36459262915915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.891934812768795,0%",
										"0;-180.9390709219564,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.891934812768795,0%",
										"0;-180.9390709219564,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.891934812768795,0%",
										"0;-180.9390709219564,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.213557125537534,0%",
										"0;-182.70337877933764,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-60.08490820043005,0%",
										"0;-181.99765563638516,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-63.827610350215025,0%",
										"0;-180.5862093504802,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.213557125537534,0%",
										"0;-182.70337877933764,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.213557125537534,0%",
										"0;-182.70337877933764,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.891934812768795,0%",
										"0;-180.9390709219564,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.891934812768795,0%",
										"0;-180.9390709219564,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.213557125537534,0%",
										"0;-182.70337877933764,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-60.08490820043005,0%",
										"0;-181.99765563638516,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-63.827610350215025,0%",
										"0;-180.5862093504802,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.213557125537534,0%",
										"0;-182.70337877933764,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-63.827610350215025,0%",
										"0;-180.5862093504802,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-58.213557125537534,0%",
										"0;-182.70337877933764,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;69.3375581699779"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/branch/267.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/267.instance": "M327,605.45L394.5703125,784.6247630645753",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/267.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/261.instance": "M394.5967619953701,784.6948986298963L472.14037508315903,961.8769634299691"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink"
			},
			"268": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "branchLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						519.26953125,
						784.6247630645753
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.90512859636613,75.20845195849104%",
										"0;174.24390123873945,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;208.85952861589203,75.20845195849104%",
										"0;169.73139412122998,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;208.85952861589203,75.20845195849104%",
										"0;169.73139412122998,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;208.85952861589203,75.20845195849104%",
										"0;169.73139412122998,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.56419526628713,75.20845195849104%",
										"0;173.4918167191546,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.56419526628713,75.20845195849104%",
										"0;173.4918167191546,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;208.85952861589203,75.20845195849104%",
										"0;169.73139412122998,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.90512859636613,75.20845195849104%",
										"0;174.24390123873945,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;207.54139527605014,75.20845195849104%",
										"0;171.2355631603998,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;208.85952861589203,75.20845195849104%",
										"0;169.73139412122998,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.56419526628713,75.20845195849104%",
										"0;173.4918167191546,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;207.54139527605014,75.20845195849104%",
										"0;171.2355631603998,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.56419526628713,75.20845195849104%",
										"0;173.4918167191546,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;208.85952861589203,75.20845195849104%",
										"0;169.73139412122998,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;204.90512859636613,75.20845195849104%",
										"0;174.24390123873945,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;205.56419526628713,75.20845195849104%",
										"0;173.4918167191546,65.90666699209835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;41.22873052498516"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-188.86075541854984,0%",
										"0;-182.83266510412216,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-188.86075541854984,0%",
										"0;-182.83266510412216,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-188.86075541854984,0%",
										"0;-182.83266510412216,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.4519795870998,0%",
										"0;-186.49056714366907,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-186.81548991967975,0%",
										"0;-185.02740632785026,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.54251058483987,0%",
										"0;-182.10108469621275,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.4519795870998,0%",
										"0;-186.49056714366907,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.4519795870998,0%",
										"0;-186.49056714366907,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-188.86075541854984,0%",
										"0;-182.83266510412216,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-188.86075541854984,0%",
										"0;-182.83266510412216,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.4519795870998,0%",
										"0;-186.49056714366907,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-186.81548991967975,0%",
										"0;-185.02740632785026,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.54251058483987,0%",
										"0;-182.10108469621275,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.4519795870998,0%",
										"0;-186.49056714366907,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-189.54251058483987,0%",
										"0;-182.10108469621275,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-185.4519795870998,0%",
										"0;-186.49056714366907,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;42.98095064357656"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/branch/268.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/268.instance": "M327,605.45L519.26953125,784.6247630645753",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink/268.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/262.instance": "M519.379148420742,784.7269146143698L721.5383931666822,961.8770023816544"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/branchLink"
			},
			"270": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						144.03027410348454,
						306.9741681096436
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.008727215884325,
						1.008727215884325
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "GetNextTask"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/270.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"282": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						345.5,
						414.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.0042689678578,92.65665117828556%",
										"0;16.793630489548434,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;54.2610547292299,92.65665117828556%",
										"0;11.234231418851266,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;54.2610547292299,92.65665117828556%",
										"0;11.234231418851266,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;54.2610547292299,92.65665117828556%",
										"0;11.234231418851266,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38039992808649,92.65665117828556%",
										"0;15.867063977765554,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38039992808649,92.65665117828556%",
										"0;15.867063977765554,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;54.2610547292299,92.65665117828556%",
										"0;11.234231418851266,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.0042689678578,92.65665117828556%",
										"0;16.793630489548434,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;53.50879280877257,92.65665117828556%",
										"0;13.08736444241697,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;54.2610547292299,92.65665117828556%",
										"0;11.234231418851266,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38039992808649,92.65665117828556%",
										"0;15.867063977765554,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;53.50879280877257,92.65665117828556%",
										"0;13.08736444241697,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38039992808649,92.65665117828556%",
										"0;15.867063977765554,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;54.2610547292299,92.65665117828556%",
										"0;11.234231418851266,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.0042689678578,92.65665117828556%",
										"0;16.793630489548434,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;52.38039992808649,92.65665117828556%",
										"0;15.867063977765554,37.61309602286835%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158279"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.61934519885659,0%",
										"0;-25.132832558914288,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.61934519885659,0%",
										"0;-25.132832558914288,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.61934519885659,0%",
										"0;-25.132832558914288,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-46.738690397713185,0%",
										"0;-29.765665117828576,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-47.490952318170514,0%",
										"0;-27.912532094262815,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.995476159085285,0%",
										"0;-24.206266047131408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-46.738690397713185,0%",
										"0;-29.765665117828576,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-46.738690397713185,0%",
										"0;-29.765665117828576,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.61934519885659,0%",
										"0;-25.132832558914288,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.61934519885659,0%",
										"0;-25.132832558914288,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-46.738690397713185,0%",
										"0;-29.765665117828576,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-47.490952318170514,0%",
										"0;-27.912532094262815,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.995476159085285,0%",
										"0;-24.206266047131408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-46.738690397713185,0%",
										"0;-29.765665117828576,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.995476159085285,0%",
										"0;-24.206266047131408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-46.738690397713185,0%",
										"0;-29.765665117828576,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;22.09423034158281"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/282.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/270.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/282.instance": "M295,394L345.5,414.5",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/282.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/121.instance": "M345.56936787893454,414.52815923798335L395.9997451269431,434.99989653667984"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"283": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						318.53870944025095,
						555
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-4,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-10,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-10,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-10,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-10,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-4,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-8,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-10,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-8,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-10,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-4,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;282.4606225737672,100%",
										"0;-5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-116.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-116.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-116.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-111.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-113.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-117.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-111.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-111.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-116.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-116.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-111.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-113.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-117.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-111.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-117.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-111.53870944025095,0%",
										"0;-161,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/283.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/270.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/283.instance": "M197,394L197,555L318.53870944025095,555",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/283.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon/189.instance": "M318.61508219252187,555L600.9993320140181,555"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"284": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						121.99999999999999,
						629.9756964074886
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-307.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-313.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-313.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-313.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-308.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-308.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-313.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-307.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-311.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-313.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-308.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-311.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-308.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-313.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-307.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;125.99904862685814,100%",
										"0;-308.9756964074886,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.992175283447,0%",
										"0;9.690964136555408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.992175283447,0%",
										"0;9.690964136555408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.992175283447,0%",
										"0;9.690964136555408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.98435056689397,0%",
										"0;14.690958013932686,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.9874804535152,0%",
										"0;12.690960462981707,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.9937402267576,0%",
										"0;8.690965361079861,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.98435056689397,0%",
										"0;14.690958013932686,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.98435056689397,0%",
										"0;14.690958013932686,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.992175283447,0%",
										"0;9.690964136555408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.992175283447,0%",
										"0;9.690964136555408,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.98435056689397,0%",
										"0;14.690958013932686,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.9874804535152,0%",
										"0;12.690960462981707,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.9937402267576,0%",
										"0;8.690965361079861,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.98435056689397,0%",
										"0;14.690958013932686,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.9937402267576,0%",
										"0;8.690965361079861,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;425.98435056689397,0%",
										"0;14.690958013932686,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.91033531652636"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/284.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/CRuleIcon/189.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/284.instance": "M548,634.6666666666666L122,634L121.99999999999999,629.9756964074886",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/284.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/270.instance": "M121.99999999999999,629.9756964074886L122,326L247.99904862685813,326"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"285": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						99.00000000000004,
						810.9388243789007
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-491.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-497.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-497.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-497.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-492.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-492.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-497.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-491.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-495.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-497.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-492.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-495.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-492.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-497.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-491.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;148.99919535156073,100%",
										"0;-492.9388243789007,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.9953736337735,0%",
										"0;249.4248060218299,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.9953736337735,0%",
										"0;249.4248060218299,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.9953736337735,0%",
										"0;249.4248060218299,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.990747267547,0%",
										"0;254.42480388150307,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.99259781403765,0%",
										"0;252.42480473763385,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.9962989070188,0%",
										"0;248.4248064498953,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.990747267547,0%",
										"0;254.42480388150307,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.990747267547,0%",
										"0;254.42480388150307,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.9953736337735,0%",
										"0;249.4248060218299,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.9953736337735,0%",
										"0;249.4248060218299,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.990747267547,0%",
										"0;254.42480388150307,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.99259781403765,0%",
										"0;252.42480473763385,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.9962989070188,0%",
										"0;248.4248064498953,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.990747267547,0%",
										"0;254.42480388150307,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.9962989070188,0%",
										"0;248.4248064498953,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;392.990747267547,0%",
										"0;254.42480388150307,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.94698574058398"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/285.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/BRuleIcon/193.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/285.instance": "M492,1055.3636325410575L99,1055L99.00000000000004,810.9388243789007",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/285.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/270.instance": "M99.00000000000004,810.9388243789007L99,323L247.99919535156076,323"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"286": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						309.8525425140837,
						306.03305081580885
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.97744689943505,-97.57895770160067%",
										"0;16.870051505518404,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-55.66517815793077,-97.57895770160067%",
										"0;22.724788967614472,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-55.66517815793077,-97.57895770160067%",
										"0;22.724788967614472,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-55.66517815793077,-97.57895770160067%",
										"0;22.724788967614472,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.75873544251766,-97.57895770160067%",
										"0;17.845841082534434,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.75873544251766,-97.57895770160067%",
										"0;17.845841082534434,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-55.66517815793077,-97.57895770160067%",
										"0;22.724788967614472,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.97744689943505,-97.57895770160067%",
										"0;16.870051505518404,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.10260107176549,-97.57895770160067%",
										"0;20.77320981358247,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-55.66517815793077,-97.57895770160067%",
										"0;22.724788967614472,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.75873544251766,-97.57895770160067%",
										"0;17.845841082534434,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.10260107176549,-97.57895770160067%",
										"0;20.77320981358247,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.75873544251766,-97.57895770160067%",
										"0;17.845841082534434,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-55.66517815793077,-97.57895770160067%",
										"0;22.724788967614472,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.97744689943505,-97.57895770160067%",
										"0;16.870051505518404,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.75873544251766,-97.57895770160067%",
										"0;17.845841082534434,21.871145691737965%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472507"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.24101477050317,0%",
										"0;-8.154102930728811,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.24101477050317,0%",
										"0;-8.154102930728811,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.24101477050317,0%",
										"0;-8.154102930728811,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;60.334572055090064,0%",
										"0;-3.2751550456487735,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.89714914125534,0%",
										"0;-5.226734199680777,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.02230331358578,0%",
										"0;-9.129892507744842,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;60.334572055090064,0%",
										"0;-3.2751550456487735,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;60.334572055090064,0%",
										"0;-3.2751550456487735,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.24101477050317,0%",
										"0;-8.154102930728811,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.24101477050317,0%",
										"0;-8.154102930728811,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;60.334572055090064,0%",
										"0;-3.2751550456487735,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.89714914125534,0%",
										"0;-5.226734199680777,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.02230331358578,0%",
										"0;-9.129892507744842,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;60.334572055090064,0%",
										"0;-3.2751550456487735,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;59.02230331358578,0%",
										"0;-9.129892507744842,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;60.334572055090064,0%",
										"0;-3.2751550456487735,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;167.36663806472495"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/286.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/118.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/286.instance": "M368,293L309.8525425140837,306.03305081580885",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/286.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/270.instance": "M309.9263961680922,306.01649741060004L252.00024978697917,318.99994401326325"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"117": {
				"position": {
					"type": "list<int>",
					"value": [
						408,
						150
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/Start"
			},
			"118": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_TerminateManTask.model"
				},
				"name": {
					"type": "string",
					"value": "TerminateManTask"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						318,
						206
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"120": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_GetInitialTask.model"
				},
				"name": {
					"type": "string",
					"value": "GetInitialTask"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						509,
						305
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"121": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_GetNextTask.model"
				},
				"name": {
					"type": "string",
					"value": "IsFinaltask"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						292,
						421.79089999999997
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"125": {
				"position": {
					"type": "list<int>",
					"value": [
						333,
						514.1836
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess"
			},
			"126": {
				"position": {
					"type": "list<int>",
					"value": [
						496,
						1308.9407
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess"
			},
			"127": {
				"position": {
					"type": "list<int>",
					"value": [
						651,
						437
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail"
			},
			"128": {
				"position": {
					"type": "list<int>",
					"value": [
						686,
						1307.1983
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail"
			},
			"129": {
				"position": {
					"type": "list<int>",
					"value": [
						431,
						517.6870999999999
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail"
			},
			"186": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/initial"
			},
			"188": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"189": {
				"ref": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/T_WorkflowsEvalCtrlNode.model"
				},
				"name": {
					"type": "string",
					"value": "EvalCtrlNode"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						498,
						540
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/CRule"
			},
			"193": {
				"name": {
					"type": "string",
					"value": "ExecAutoTask"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						327,
						605.45
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/BRule"
			},
			"216": {
				"name": {
					"type": "string",
					"value": "ExecManTask"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						349,
						1071.8393
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/BRule"
			},
			"223": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"224": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"229": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"231": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"233": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"234": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"235": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"254": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"255": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_ExecuteEditModel.model"
				},
				"name": {
					"type": "string",
					"value": "ExecuteEditModel"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						492,
						1150.5180999999998
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"256": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/branch"
			},
			"257": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_ExecuteOpenModel.model"
				},
				"name": {
					"type": "string",
					"value": "ExecuteOpenModel"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						369,
						754.3084999999999
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"258": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_ExecuteSaveModel.model"
				},
				"name": {
					"type": "string",
					"value": "ExecuteSaveModel"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						610,
						754.3084999999999
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"259": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_ExecGenerateAS.model"
				},
				"name": {
					"type": "string",
					"value": "ExecGenerateAS"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						367,
						844.3084999999999
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"260": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_ExecGenerateCS.model"
				},
				"name": {
					"type": "string",
					"value": "ExecGenerateCS"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						610,
						843.3084999999999
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"261": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_ExecLoadToolbar.model"
				},
				"name": {
					"type": "string",
					"value": "ExecLoadToolbar"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						365,
						922.3084999999999
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"262": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_ExecGeneratePMM.model"
				},
				"name": {
					"type": "string",
					"value": "ExecGeneratePMM"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						608,
						922.3084999999999
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"263": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/branch"
			},
			"264": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/branch"
			},
			"265": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/branch"
			},
			"266": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/branch"
			},
			"267": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/branch"
			},
			"268": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/branch"
			},
			"270": {
				"rule": {
					"type": "string",
					"value": "/Formalisms/Workflows/simulate/R_GetNextTask.model"
				},
				"name": {
					"type": "string",
					"value": "GetNextTask"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						144.03027410348454,
						306.9741681096436
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"282": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"283": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"284": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"285": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"286": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			}
		},
		"edges": [
			{
				"src": "117",
				"dest": "186"
			},
			{
				"src": "186",
				"dest": "118"
			},
			{
				"src": "120",
				"dest": "188"
			},
			{
				"src": "188",
				"dest": "127"
			},
			{
				"src": "121",
				"dest": "223"
			},
			{
				"src": "223",
				"dest": "125"
			},
			{
				"src": "121",
				"dest": "224"
			},
			{
				"src": "224",
				"dest": "129"
			},
			{
				"src": "189",
				"dest": "229"
			},
			{
				"src": "229",
				"dest": "193"
			},
			{
				"src": "193",
				"dest": "231"
			},
			{
				"src": "231",
				"dest": "216"
			},
			{
				"src": "216",
				"dest": "233"
			},
			{
				"src": "233",
				"dest": "126"
			},
			{
				"src": "216",
				"dest": "234"
			},
			{
				"src": "234",
				"dest": "128"
			},
			{
				"src": "118",
				"dest": "235"
			},
			{
				"src": "235",
				"dest": "120"
			},
			{
				"src": "120",
				"dest": "254"
			},
			{
				"src": "254",
				"dest": "189"
			},
			{
				"src": "216",
				"dest": "256"
			},
			{
				"src": "256",
				"dest": "255"
			},
			{
				"src": "193",
				"dest": "263"
			},
			{
				"src": "263",
				"dest": "257"
			},
			{
				"src": "193",
				"dest": "264"
			},
			{
				"src": "264",
				"dest": "258"
			},
			{
				"src": "193",
				"dest": "265"
			},
			{
				"src": "265",
				"dest": "259"
			},
			{
				"src": "193",
				"dest": "266"
			},
			{
				"src": "266",
				"dest": "260"
			},
			{
				"src": "193",
				"dest": "267"
			},
			{
				"src": "267",
				"dest": "261"
			},
			{
				"src": "193",
				"dest": "268"
			},
			{
				"src": "268",
				"dest": "262"
			},
			{
				"src": "270",
				"dest": "282"
			},
			{
				"src": "282",
				"dest": "121"
			},
			{
				"src": "270",
				"dest": "283"
			},
			{
				"src": "283",
				"dest": "189"
			},
			{
				"src": "189",
				"dest": "284"
			},
			{
				"src": "284",
				"dest": "270"
			},
			{
				"src": "193",
				"dest": "285"
			},
			{
				"src": "285",
				"dest": "270"
			},
			{
				"src": "118",
				"dest": "286"
			},
			{
				"src": "286",
				"dest": "270"
			}
		],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif"
		]
	}
}